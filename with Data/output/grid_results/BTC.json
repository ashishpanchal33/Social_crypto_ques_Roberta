{
    "mean_fit_time": [
        12.798200845718384,
        12.172475337982178,
        12.773052549362182,
        12.734923553466796,
        13.23835186958313,
        11.49092001914978,
        10.890206050872802,
        11.463201570510865,
        11.276600074768066,
        11.526600170135499,
        10.953400087356567,
        11.190802621841431,
        11.07640323638916,
        11.344401264190674,
        11.384999704360961,
        11.807999515533448,
        11.572402477264404,
        11.49539942741394,
        12.18600115776062,
        12.379800033569335,
        13.723397493362427,
        12.397598600387573,
        12.728598880767823,
        12.810512828826905,
        12.509119462966918,
        11.218602418899536,
        11.809813642501831,
        12.375813436508178,
        11.39081335067749,
        11.69644045829773,
        11.028116464614868,
        11.780312204360962,
        11.675247812271119,
        11.759199237823486,
        11.093799591064453,
        11.636999416351319,
        11.891799879074096,
        11.142400550842286,
        11.270399332046509,
        11.413800382614136,
        11.761800479888915,
        11.352399444580078,
        11.642399787902832,
        11.408400440216065,
        12.336801719665527,
        14.956199455261231,
        15.074002742767334,
        14.974602031707764,
        15.532401323318481,
        15.716599559783935,
        13.831400299072266,
        14.335198879241943,
        13.99280014038086,
        13.65340189933777,
        13.518203020095825,
        12.446403980255127,
        10.848999404907227,
        11.803400325775147,
        12.30219931602478,
        12.01060085296631,
        12.406800746917725,
        11.629710865020751,
        12.11159987449646,
        11.597002124786377,
        12.303400325775147,
        11.416993284225464,
        11.947600650787354,
        11.55839924812317,
        11.897799491882324,
        11.661771011352538,
        12.257643699645996,
        12.068492126464843,
        11.98080062866211,
        12.303396511077882,
        11.577999639511109,
        11.983595514297486,
        11.314599609375,
        11.765200090408324,
        12.739204216003419,
        12.585201215744018,
        11.802800941467286,
        11.652398300170898,
        11.117002534866334,
        11.49660153388977,
        11.806199932098389,
        11.724201726913453,
        11.97420072555542,
        11.643999052047729,
        11.802997970581055,
        12.506200075149536,
        17.166999721527098,
        15.646269941329956,
        15.678401708602905,
        16.414232158660887,
        15.822363376617432,
        14.241401529312133,
        14.250600862503052,
        14.14420132637024,
        14.246601963043213,
        13.072373104095458,
        12.649002408981323,
        12.894199514389038,
        13.851600837707519,
        13.163401365280151,
        13.281820011138915,
        13.386666440963745,
        12.56371250152588,
        12.846000957489014,
        12.063800954818726,
        12.37040023803711,
        12.211200189590453,
        11.947401475906371,
        12.001204872131348,
        12.71739935874939,
        12.602800035476685,
        12.663599729537964,
        12.503802394866943,
        11.733400964736939,
        12.70619831085205,
        12.30740041732788,
        12.293199825286866,
        11.656399536132813,
        11.98139991760254,
        11.882323360443115,
        12.106512784957886,
        12.204200983047485,
        11.719000768661498,
        12.307001066207885,
        12.688801193237305,
        12.216799211502074,
        11.571799898147583,
        11.70441722869873,
        10.080615854263305,
        10.845599460601807,
        12.07520089149475,
        34.06673140525818,
        33.40148658752442,
        35.44479951858521,
        32.48220229148865,
        34.083000898361206,
        25.470589303970335,
        25.890999364852906,
        26.21680107116699,
        24.978557968139647,
        27.51940288543701,
        23.925400733947754,
        24.153416633605957,
        22.17460126876831,
        24.184327936172487,
        22.40200009346008,
        22.09500160217285,
        21.466600131988525,
        21.89579963684082,
        22.388199424743654,
        21.248000717163087,
        20.948185539245607,
        20.23140158653259,
        21.036599969863893,
        20.3930016040802,
        20.807000255584718,
        19.917799043655396,
        19.899000644683838,
        19.675402021408082,
        20.510001707077027,
        19.87760763168335,
        19.04057240486145,
        19.91139883995056,
        18.54058632850647,
        20.48041534423828,
        18.720201015472412,
        19.53840045928955,
        18.253600978851317,
        18.98720078468323,
        18.962000703811647,
        18.81240568161011,
        19.144402027130127,
        17.836339139938353,
        18.681200885772704,
        18.183001708984374,
        12.587799644470214
    ],
    "std_fit_time": [
        0.9480175602983059,
        0.6191930249831962,
        0.32874890456140404,
        0.8789162766767854,
        0.5983920555994354,
        0.11890314645233382,
        0.9223583462336783,
        0.7346911011859597,
        0.14194880330654297,
        0.7850812714438717,
        0.17401718266913485,
        0.8325190044897621,
        0.2839115184935544,
        0.7365858703627328,
        0.2982296882635969,
        0.6647348649565776,
        0.08743307558081499,
        1.0154086637472568,
        1.005950612250264,
        0.4655295283586554,
        0.9529293214496953,
        0.8261261845904513,
        0.9765036927785286,
        0.500119040293457,
        1.0249009927343626,
        0.3391409559455509,
        0.9114734341454374,
        0.7012398140620083,
        0.5074777422738302,
        0.7052117961937837,
        0.3738398883922776,
        0.7681777041618388,
        0.41720782508620896,
        0.8301345083079315,
        0.39779473950050187,
        0.6579610818168151,
        0.7788880549051183,
        0.26198575102503247,
        0.8083808633863712,
        0.1953546909707913,
        0.9162410986630871,
        0.3641152279717232,
        0.781151840187229,
        0.6684436646623774,
        0.9149018257523476,
        0.520897708746276,
        1.4310104906776024,
        0.5964541590068085,
        1.2763147644507022,
        0.7940552088516121,
        0.2838372362652051,
        0.6464000599988842,
        0.43053801602592,
        1.1017257917909054,
        0.5967020718066482,
        1.2282195233162243,
        0.22772285215470814,
        0.802352231243435,
        0.9681863184933613,
        0.3822552343256843,
        0.665175159390081,
        0.4219725115914503,
        0.7670072856893594,
        0.3462074260048336,
        1.0107063306113007,
        0.34071328570772247,
        0.8167382837974676,
        0.4005052134586092,
        0.9810999755712927,
        0.3006423577554328,
        0.8268630938349547,
        0.8951507557043534,
        0.5156763266613882,
        0.6357329601614142,
        0.3480838878112469,
        0.8471922596653932,
        0.4060281988063679,
        0.7145827660937074,
        1.6396427639050817,
        0.45932416943601684,
        0.22410538504628752,
        0.8739259410562077,
        0.50639500486307,
        0.7719241053057564,
        0.7057633107785524,
        0.523211242257105,
        0.6875726682107965,
        0.3550565064105655,
        0.6482960096703148,
        1.0807720029317875,
        0.7661175906446539,
        0.7346785888700813,
        1.3994702996531472,
        0.5837227316804912,
        1.1298449144424745,
        0.667474619362121,
        1.2539958350549247,
        0.6153163041732169,
        1.0081072458426208,
        1.2389485454946414,
        0.8381037283013085,
        0.2690458073872848,
        0.5053174453463111,
        0.30460032602651144,
        0.8387128811732932,
        0.6430387014363526,
        0.6832318088843582,
        0.9916502232818191,
        0.2898269331827591,
        0.8648768000614699,
        0.34350534893456963,
        0.6099247897834427,
        0.22797051029198326,
        0.7900790750736324,
        0.16666728621850072,
        0.8880199368913737,
        0.6410959898040528,
        0.07224199303826169,
        1.0108305288802926,
        0.3302435031538749,
        0.8645424313162198,
        0.408179360903186,
        0.7454187848358589,
        0.27598439360854754,
        0.8492897711042959,
        0.7292424429894272,
        0.4879182786414394,
        0.8109248221092111,
        0.4308596414361448,
        0.7803058159405591,
        0.3727968637723208,
        0.9379602676775498,
        0.2561253198404398,
        0.8508100488668848,
        0.6416700934176676,
        3.1436866286217415,
        1.7500118088949248,
        1.8708684158757654,
        1.8796529308415812,
        3.036687347407955,
        0.4243797061507853,
        2.171390846900485,
        0.9287461851915838,
        0.8706016284958039,
        1.4728370678808853,
        1.836407442171153,
        1.8686534244545963,
        1.2024596225490933,
        2.2513803431906636,
        1.3825074089478495,
        1.9775682128681942,
        0.6925934502796172,
        2.3755152524720313,
        1.3864139051944648,
        0.8013770303080017,
        1.3417585576048146,
        0.8329061240649606,
        1.4430419189033923,
        0.9877989550771779,
        1.2369909069012264,
        1.631583110822237,
        0.6628005326324852,
        1.5191952927900083,
        0.7960236186194599,
        1.1814526279789332,
        1.6331727897715567,
        0.9757133332112613,
        1.3010851955103069,
        1.4749910489866298,
        1.4788605941340565,
        2.0637069394839744,
        0.7442119263280937,
        1.8149975758145267,
        0.48457212664656035,
        1.7755903591312232,
        0.8389689609318222,
        0.6435229589329247,
        1.5333503575620162,
        0.7049589002785434,
        3.370288714520133
    ],
    "mean_score_time": [
        0.1105987548828125,
        0.11139822006225586,
        0.12340021133422852,
        0.11359992027282714,
        0.12840065956115723,
        0.11219935417175293,
        0.09499974250793457,
        0.10060019493103027,
        0.1101999282836914,
        0.10599980354309083,
        0.09799890518188477,
        0.11539988517761231,
        0.11079673767089844,
        0.10619964599609374,
        0.11219906806945801,
        0.12340145111083985,
        0.11319894790649414,
        0.11560115814208985,
        0.13620104789733886,
        0.13140039443969725,
        0.1722019672393799,
        0.11419968605041504,
        0.15120148658752441,
        0.12559976577758789,
        0.12779817581176758,
        0.1447967529296875,
        0.14700121879577638,
        0.11799921989440917,
        0.10499773025512696,
        0.11760845184326171,
        0.13100056648254393,
        0.14639925956726074,
        0.12059779167175293,
        0.10800151824951172,
        0.1344003677368164,
        0.1305997371673584,
        0.12499957084655762,
        0.11780052185058594,
        0.11740083694458008,
        0.12240166664123535,
        0.12759952545166015,
        0.1177988052368164,
        0.12359910011291504,
        0.1123988151550293,
        0.13579854965209961,
        0.12739896774291992,
        0.1347968101501465,
        0.11859798431396484,
        0.11539840698242188,
        0.112800931930542,
        0.112998628616333,
        0.12740092277526854,
        0.11820106506347657,
        0.12919750213623046,
        0.1314004421234131,
        0.10799665451049804,
        0.11279854774475098,
        0.11899971961975098,
        0.11259965896606446,
        0.11839876174926758,
        0.11439933776855468,
        0.11295552253723144,
        0.10280075073242187,
        0.1123990535736084,
        0.11479973793029785,
        0.11399874687194825,
        0.11659917831420899,
        0.11540093421936035,
        0.11959900856018066,
        0.11680064201354981,
        0.10419940948486328,
        0.13599896430969238,
        0.1801995277404785,
        0.1134007453918457,
        0.10699849128723145,
        0.10619869232177734,
        0.10680031776428223,
        0.1161999225616455,
        0.11979584693908692,
        0.12119898796081544,
        0.11260046958923339,
        0.11619915962219238,
        0.1323986530303955,
        0.12921528816223143,
        0.12060155868530273,
        0.10279693603515624,
        0.11039848327636718,
        0.11739945411682129,
        0.11240053176879883,
        0.10979924201965333,
        0.12019963264465332,
        0.1087313175201416,
        0.12479791641235352,
        0.11616802215576172,
        0.11983671188354492,
        0.10779848098754882,
        0.12679977416992189,
        0.12699804306030274,
        0.11564602851867675,
        0.12020139694213867,
        0.12561235427856446,
        0.12199897766113281,
        0.11079993247985839,
        0.1261988639831543,
        0.1303083896636963,
        0.1291989803314209,
        0.1172001838684082,
        0.1327989101409912,
        0.12079839706420899,
        0.12420001029968261,
        0.12919912338256836,
        0.12199969291687011,
        0.11462092399597168,
        0.115199613571167,
        0.12320151329040527,
        0.11559820175170898,
        0.12160086631774902,
        0.12019944190979004,
        0.12020082473754883,
        0.11020092964172364,
        0.11320109367370605,
        0.10959935188293457,
        0.10279965400695801,
        0.11499972343444824,
        0.1345998764038086,
        0.11840033531188965,
        0.11461105346679687,
        0.12340340614318848,
        0.12199974060058594,
        0.10980000495910644,
        0.11699953079223632,
        0.12919974327087402,
        0.09900007247924805,
        0.1128002643585205,
        0.10859956741333007,
        0.137799072265625,
        0.10160107612609863,
        0.12839918136596679,
        0.11279807090759278,
        0.10639944076538085,
        0.12359881401062012,
        0.11779870986938476,
        0.10679998397827148,
        0.12159972190856934,
        0.12299747467041015,
        0.11159858703613282,
        0.10138478279113769,
        0.11699891090393066,
        0.11820030212402344,
        0.11719989776611328,
        0.11979827880859376,
        0.11279926300048829,
        0.1197993278503418,
        0.12839775085449218,
        0.11360034942626954,
        0.12259821891784668,
        0.10879874229431152,
        0.12120013236999512,
        0.11719956398010253,
        0.12340202331542968,
        0.12659878730773927,
        0.11079888343811035,
        0.12439846992492676,
        0.11799745559692383,
        0.10997967720031739,
        0.10179939270019531,
        0.10679993629455567,
        0.11639895439147949,
        0.13658618927001953,
        0.12439813613891601,
        0.129998779296875,
        0.10740017890930176,
        0.12499823570251464,
        0.11919941902160644,
        0.12159461975097656,
        0.12019867897033691,
        0.11599979400634766,
        0.11479926109313965,
        0.11179914474487304,
        0.05760149955749512
    ],
    "std_score_time": [
        0.007202432673750931,
        0.016989362097803228,
        0.020510028070454656,
        0.01355950344013457,
        0.012971389773167152,
        0.01633803185641298,
        0.008554544777207705,
        0.006285943726060633,
        0.018679854351279078,
        0.010935006917696702,
        0.009143016599380943,
        0.01614378790957009,
        0.008448748155060342,
        0.005981432609626726,
        0.009173371146379995,
        0.018782024610545435,
        0.018671113602226307,
        0.015550759341972715,
        0.01523812238352918,
        0.012909442797623488,
        0.049307402964391116,
        0.00661339054762725,
        0.029741201166770183,
        0.008475567982151759,
        0.02594182241006345,
        0.02189795691001704,
        0.021335626923807877,
        0.013956045036135978,
        0.0103515342222404,
        0.006440763366763688,
        0.015558096859246197,
        0.02722282033663305,
        0.011639012093384494,
        0.017528027962899335,
        0.03762218264415819,
        0.019303092229120317,
        0.006420189123232889,
        0.006045631076266613,
        0.009308521634272293,
        0.010670148727365946,
        0.013016447118171551,
        0.021848055151811777,
        0.008821272815722841,
        0.012009969507785543,
        0.01813842233934957,
        0.01715308055998486,
        0.022565815923225666,
        0.010247946551537037,
        0.005986052628778927,
        0.008634967410485235,
        0.007268373827584654,
        0.02098198935703272,
        0.017728256060347992,
        0.02071494624728517,
        0.0314797460526359,
        0.007401290449586328,
        0.005116510263472624,
        0.007563056066821546,
        0.01080006760750684,
        0.006885117684003549,
        0.0033822172793429375,
        0.0016756356295822663,
        0.025599939009349794,
        0.013197774087976361,
        0.010047208450687633,
        0.008295297581702792,
        0.008308262932344894,
        0.02215092943155783,
        0.020539438567623344,
        0.006554678167637201,
        0.023335071924512146,
        0.04768851218324306,
        0.10659109537574153,
        0.01158280262621352,
        0.01507363795793597,
        0.015509214548786001,
        0.014413981480620567,
        0.009452619041747809,
        0.015090263243267331,
        0.013076981826354191,
        0.010307255638188639,
        0.007910200268091657,
        0.016667885278547692,
        0.027866431037013598,
        0.010762696942630597,
        0.01885108386649734,
        0.01711911640001295,
        0.025585490399673175,
        0.025757919209276534,
        0.02021271905028151,
        0.00738709434963573,
        0.010887441671424105,
        0.007303807940781748,
        0.010176852532694146,
        0.017020250270213352,
        0.02186849367364449,
        0.013875361715058473,
        0.017911165839819276,
        0.014169221622100757,
        0.020791456021048975,
        0.011113630419100622,
        0.007402565353452037,
        0.01595632476789174,
        0.030309256084705798,
        0.024510322519295042,
        0.021496044927902587,
        0.025810059009102635,
        0.014904089335564332,
        0.013525494952058506,
        0.0131037960695797,
        0.03236887923713438,
        0.011418208067536536,
        0.00860431824683381,
        0.007547924354544587,
        0.018773219751789506,
        0.009069837724296086,
        0.009414981158060243,
        0.025847952217225186,
        0.014877827673413157,
        0.012920152052688795,
        0.008930390492594507,
        0.00440769366408296,
        0.009174207995625806,
        0.007535765612385347,
        0.01714275263229429,
        0.009562297924450545,
        0.022733771145038006,
        0.00926915472283017,
        0.018371960826867526,
        0.0018335858907401982,
        0.013914048451477402,
        0.052662397254972404,
        0.011525006051231069,
        0.009151189799330302,
        0.026665168154011896,
        0.008610757852149481,
        0.01655940994815815,
        0.010855016994246491,
        0.014550767795195294,
        0.01197664786907518,
        0.010651877200225437,
        0.012998313187894416,
        0.018015152068903355,
        0.014459745515032972,
        0.00599893736105558,
        0.009391228464870557,
        0.017796230799752923,
        0.010468457197322848,
        0.013760120882610822,
        0.008906935911075631,
        0.007858263877111065,
        0.012702282433997954,
        0.008634483412781477,
        0.011111257647804856,
        0.014920329075499755,
        0.013046939440440842,
        0.018257336909006022,
        0.0119569123832525,
        0.01236726693279091,
        0.014677240084000506,
        0.005536333725137075,
        0.010609015909461398,
        0.011111662755212975,
        0.0050200523351136075,
        0.00992658607652433,
        0.016436308981298397,
        0.01821377204068935,
        0.009134321020306766,
        0.0626326716334563,
        0.0123715365671376,
        0.01543899247135588,
        0.006915719338337298,
        0.010640498830513634,
        0.012448081087883632,
        0.010203744221025926,
        0.019852903376527425,
        0.011188963995931446,
        0.01349639045679755,
        0.005035103005691153,
        0.0068877498139348
    ],
    "param_eval_metric": [
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse"
    ],
    "param_learning_rate": [
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05
    ],
    "param_max_depth": [
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6
    ],
    "param_min_child_weight": [
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "param_n_estimators": [
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000
    ],
    "param_objective": [
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror"
    ],
    "param_predictor": [
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor"
    ],
    "param_random_state": [
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123
    ],
    "param_reg_alpha": [
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47,
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47,
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47,
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47
    ],
    "param_reg_lambda": [
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001
    ],
    "param_tree_method": [
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist"
    ],
    "params": [
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        }
    ],
    "split0_test_score": [
        -0.024219594637345708,
        -0.0340355136821922,
        -0.03927382427284461,
        -0.041272342285954965,
        -0.04164549011192574,
        -0.03133974227339712,
        -0.043936686608871255,
        -0.04077736816282886,
        -0.040470122809410355,
        -0.040469557034029734,
        -0.03490795695617455,
        -0.0334904182655066,
        -0.03376075265083206,
        -0.03319147075208945,
        -0.0331908752572202,
        -0.03752751066480008,
        -0.036902145669636593,
        -0.0316611048114916,
        -0.03165356932838437,
        -0.03165282732038537,
        -0.034930121973050565,
        -0.03622267163407782,
        -0.038356639344932136,
        -0.038349447523816256,
        -0.038348717196059624,
        -0.03450259362102419,
        -0.03627873589861164,
        -0.03925523546320898,
        -0.03924078969624058,
        -0.03923975386141236,
        -0.03856690353799816,
        -0.03681206684720268,
        -0.03725868706231242,
        -0.03694772660295919,
        -0.03694717898403357,
        -0.029799270100054513,
        -0.029340745984536898,
        -0.028450591801039826,
        -0.028445316055184137,
        -0.028444776447811758,
        -0.029192324891438824,
        -0.029713445026806156,
        -0.030858069324436684,
        -0.030851996777161474,
        -0.03085138994212675,
        -0.019185775183651943,
        -0.02524016811213105,
        -0.03572514847860774,
        -0.035121694857762786,
        -0.035226033096215345,
        -0.02643512050383035,
        -0.023012340731260576,
        -0.03102721702583193,
        -0.03120635733977121,
        -0.03120923650924756,
        -0.025911444657482137,
        -0.024929072478486695,
        -0.024569536645258364,
        -0.02365205045833987,
        -0.023651607468751584,
        -0.02604765880582784,
        -0.024565686135562984,
        -0.025342386932858563,
        -0.025609433104937875,
        -0.02560898796339061,
        -0.025099959174052708,
        -0.02445285982741459,
        -0.02512342622389917,
        -0.025117636010250535,
        -0.025117065688876568,
        -0.024713422774086974,
        -0.022591759528049277,
        -0.02830233488278889,
        -0.02683013838748709,
        -0.026829570865573013,
        -0.02653992929353628,
        -0.026159884939421053,
        -0.023817052181872973,
        -0.023811967957084047,
        -0.023811457430282904,
        -0.027140572356648296,
        -0.023312978665504764,
        -0.023206475394090285,
        -0.02320271469019346,
        -0.023202345424817028,
        -0.025392781389900004,
        -0.024718883958863257,
        -0.02507729681318735,
        -0.025072952368983457,
        -0.02507251554759937,
        -0.017037998047593803,
        -0.024576880864338367,
        -0.03182554910663025,
        -0.032337126797116464,
        -0.03660473527208208,
        -0.0317085050925655,
        -0.03410280250761797,
        -0.028355994927732036,
        -0.02833863118658114,
        -0.02788526144884624,
        -0.027668275959628553,
        -0.02976765773697599,
        -0.02903305912038068,
        -0.026815693676067523,
        -0.026815481296703893,
        -0.020088489277649824,
        -0.021661717214852196,
        -0.026819192496663473,
        -0.02815288620111789,
        -0.028152286145828292,
        -0.01700065985980922,
        -0.018880612410390872,
        -0.019454090035158283,
        -0.019452423752098845,
        -0.019950582038122566,
        -0.018900695315530826,
        -0.017990582619185617,
        -0.01831142047214041,
        -0.01808283850061344,
        -0.018082597746671623,
        -0.02307033993193125,
        -0.01792695357103724,
        -0.01753778274415746,
        -0.017643871159228833,
        -0.017643557536177988,
        -0.019827186093643454,
        -0.023264019325249245,
        -0.024550894609123783,
        -0.02454386241558805,
        -0.02454346525779653,
        -0.019884212270714584,
        -0.020773811423524368,
        -0.021186022153340152,
        -0.02127880376107928,
        -0.021278417469093164,
        -0.018730749063894735,
        -0.028505212239992802,
        -0.034782154251836096,
        -0.036050305521726764,
        -0.03538049855274733,
        -0.023241186968832945,
        -0.022509587736472655,
        -0.024094418129814766,
        -0.024411374953683798,
        -0.024170779849310597,
        -0.022226353314610012,
        -0.022631280816854314,
        -0.022236534706258637,
        -0.022668068997472524,
        -0.022710315696130048,
        -0.0205561162017994,
        -0.019978841393062153,
        -0.02014049753249741,
        -0.021087837556556015,
        -0.021051205568593027,
        -0.0182725066246359,
        -0.018287640119932582,
        -0.019132073632655264,
        -0.018601935645657198,
        -0.0186148189208747,
        -0.018031318320176307,
        -0.01898942819023292,
        -0.017588391409164017,
        -0.01925489921655719,
        -0.017208819926017055,
        -0.017055469710144624,
        -0.01864717897342283,
        -0.017711924026868144,
        -0.017903217971601163,
        -0.017902932817412013,
        -0.019297832641371068,
        -0.021661434437086922,
        -0.018959945915224166,
        -0.01954245039358201,
        -0.01864215476997822,
        -0.020247144797177374,
        -0.02018781796021057,
        -0.022263153961707575,
        -0.021413724084981062,
        -0.02141340157399989
    ],
    "split1_test_score": [
        -0.02706522513072106,
        -0.02835530084700236,
        -0.023917898355053903,
        -0.02814405774768673,
        -0.028403771596803046,
        -0.03252047204558555,
        -0.03160945262607403,
        -0.02995883684995715,
        -0.02949313404810575,
        -0.029493037713920322,
        -0.03092342576491319,
        -0.025927889340860325,
        -0.025147065906753828,
        -0.024864689314691636,
        -0.024864633160556853,
        -0.03145441332244178,
        -0.034500369810328606,
        -0.03574569473220056,
        -0.03574374656697741,
        -0.03574351870710606,
        -0.03207610729947594,
        -0.03322981658645871,
        -0.029761093157421096,
        -0.02975827080202859,
        -0.029758129023582974,
        -0.04075582261097336,
        -0.03618271766517876,
        -0.03737371463403965,
        -0.03735535168587045,
        -0.03735532076822798,
        -0.04099559116618038,
        -0.04253362474460928,
        -0.0407991654409365,
        -0.040469735781919855,
        -0.04046945472339568,
        -0.03316632772714172,
        -0.032642165916531185,
        -0.0317887648752076,
        -0.030895841558113528,
        -0.03089558329533699,
        -0.03212550152608793,
        -0.030727096948307307,
        -0.030732463788965807,
        -0.030730429944242924,
        -0.03073022297252865,
        -0.03115175731854931,
        -0.030580617526500566,
        -0.023687416816728174,
        -0.028118284069285904,
        -0.026487018621701813,
        -0.03203433418890989,
        -0.031444052544494346,
        -0.030212842085956742,
        -0.030563672497495503,
        -0.03151458566637323,
        -0.029106866091062278,
        -0.03763447058247875,
        -0.03688475691808948,
        -0.034876291038676864,
        -0.034876158962548004,
        -0.029118279363901108,
        -0.028420298339311735,
        -0.025957305657751506,
        -0.025955927008170555,
        -0.02534402082571494,
        -0.033987013306900654,
        -0.03314434768548558,
        -0.03274592827696998,
        -0.032765749269199805,
        -0.032765639793696906,
        -0.034091528571615945,
        -0.03816552970920668,
        -0.027676138669339385,
        -0.03239173421723925,
        -0.0323916172633387,
        -0.03310890091761914,
        -0.029194934733048464,
        -0.032387208515660494,
        -0.03327013566966483,
        -0.0332701632524496,
        -0.03194012911843252,
        -0.03225132212376664,
        -0.03262670271613371,
        -0.032625743417609265,
        -0.03262565851236289,
        -0.031184384565632734,
        -0.03336901595801364,
        -0.03120038065922665,
        -0.031199287591969865,
        -0.031199158205680116,
        -0.027739468691894264,
        -0.027573880241812104,
        -0.026075856495546983,
        -0.02763720275740391,
        -0.02776005351507438,
        -0.0285238908796804,
        -0.029960058800327472,
        -0.02952023870744795,
        -0.02941310987750424,
        -0.029371648546870483,
        -0.03315667618021597,
        -0.029521099159113065,
        -0.02788721709752531,
        -0.03022806902229119,
        -0.030227863617726163,
        -0.028925862185408307,
        -0.029309745370379284,
        -0.02985060503416566,
        -0.02774203121072182,
        -0.027741981550572652,
        -0.03332689359606247,
        -0.029654926478315222,
        -0.030508875373271762,
        -0.031707902297622416,
        -0.03170775209344045,
        -0.032315900948799776,
        -0.03298714904615788,
        -0.03192009032917869,
        -0.03182961797580501,
        -0.031829582603465266,
        -0.02913280019960231,
        -0.03709944140414499,
        -0.031091752082144715,
        -0.031090935186884962,
        -0.031090831377265725,
        -0.03409112346510294,
        -0.029381126341301966,
        -0.027816845031158926,
        -0.028095034347193182,
        -0.02809496657995796,
        -0.03950526076702479,
        -0.03300108916859898,
        -0.03960310014280537,
        -0.039602506714673046,
        -0.0395665899545618,
        -0.02744037547638694,
        -0.027023871355627848,
        -0.02590145816163395,
        -0.027165546007430375,
        -0.027839387491225328,
        -0.02814533709047744,
        -0.028260838965437206,
        -0.028509681466721632,
        -0.028659170297076004,
        -0.028237435211473486,
        -0.029202029266643042,
        -0.028275296851330897,
        -0.028671150795316014,
        -0.02953139402941069,
        -0.029318256844365138,
        -0.029555213455308208,
        -0.02984276996372339,
        -0.029615799255180635,
        -0.029233189535119445,
        -0.028927986355867567,
        -0.028492604992849994,
        -0.029335040882808038,
        -0.02978935957077087,
        -0.03003313934139078,
        -0.030243703121047995,
        -0.02995861735311069,
        -0.028512635414642076,
        -0.0295891837529341,
        -0.029340782022700226,
        -0.03084349054015203,
        -0.029458997222727414,
        -0.03056622776399091,
        -0.03272429223156954,
        -0.030700206323159132,
        -0.03022750045732353,
        -0.03240479651210552,
        -0.03162875617048262,
        -0.030922454441917067,
        -0.032565851068323826,
        -0.03256576370126284,
        -0.034715423943630246,
        -0.031198559946459568,
        -0.033335086502307036,
        -0.033294821631564574,
        -0.03328707242589193
    ],
    "split2_test_score": [
        -0.19148867715344536,
        -0.20140768784481833,
        -0.18712452421934994,
        -0.18224999175115597,
        -0.1843308873711997,
        -0.16468891812761063,
        -0.17977935058459735,
        -0.16689807595004597,
        -0.16842574622990983,
        -0.16842857175692666,
        -0.17311219144870305,
        -0.16728962082361248,
        -0.18057746714984052,
        -0.17921889718568934,
        -0.17922053041963973,
        -0.18210626861977014,
        -0.17469541884676784,
        -0.17133506357134476,
        -0.17334730354262196,
        -0.17334879855015783,
        -0.17355876608839016,
        -0.17444351549718023,
        -0.17505469329702694,
        -0.17506411646411418,
        -0.1750650666026189,
        -0.17499291728167907,
        -0.17708328870996717,
        -0.17558552850061773,
        -0.17549313120999702,
        -0.17549411591848268,
        -0.17687638375225262,
        -0.1712921503634704,
        -0.1707707937967554,
        -0.1707798985372627,
        -0.17078082736926942,
        -0.17552980928056763,
        -0.17387473109661347,
        -0.17431247729599286,
        -0.17431894488993505,
        -0.1743196100082085,
        -0.1828090816410325,
        -0.17817614492985667,
        -0.18421651151205512,
        -0.18422082903172504,
        -0.1842213117551993,
        -0.1812170585513487,
        -0.19122125144725133,
        -0.1938013966683776,
        -0.18923882192335204,
        -0.18639186164176422,
        -0.17064559576365576,
        -0.17561885465933774,
        -0.1743287243023496,
        -0.17359837199797193,
        -0.17345580020406456,
        -0.16857625741526422,
        -0.16732405348508608,
        -0.16812117281975278,
        -0.16805942684541542,
        -0.16806065823489494,
        -0.16586888732984825,
        -0.17186662744766085,
        -0.17193131081233265,
        -0.1719398927958384,
        -0.17194084119538566,
        -0.17176085493579848,
        -0.17481447972505643,
        -0.17202509946161204,
        -0.17203312798001602,
        -0.17203388932371377,
        -0.16893513298287402,
        -0.17043257221411173,
        -0.1723518257091359,
        -0.1714043076198408,
        -0.171404905507308,
        -0.16934584401543432,
        -0.17074618584461917,
        -0.17056231028836843,
        -0.17056891122522072,
        -0.170569550509435,
        -0.16826000566493704,
        -0.1664148278397178,
        -0.17296487352601495,
        -0.17273819109390817,
        -0.17273867042836233,
        -0.16940719341227548,
        -0.17117925145734836,
        -0.1705544291244749,
        -0.17055875221493108,
        -0.17055916584523173,
        -0.1788313900935295,
        -0.1882311697225215,
        -0.18113051331217178,
        -0.18567390738668135,
        -0.18734406404868215,
        -0.16826582864580278,
        -0.17255931720986434,
        -0.17392030887310342,
        -0.17421577906831345,
        -0.17353919517900188,
        -0.16948622956562956,
        -0.16618135083022734,
        -0.17297302455325556,
        -0.1738462364240605,
        -0.17038416160423303,
        -0.1697709256831494,
        -0.1678921304392039,
        -0.17167501227326082,
        -0.17094771984767493,
        -0.1709485537073435,
        -0.16539351418495474,
        -0.1671290758035305,
        -0.17301179299426558,
        -0.16787304368104383,
        -0.16787356404248377,
        -0.17246104025170364,
        -0.17213383300059856,
        -0.17286572288756455,
        -0.17287080771731386,
        -0.1728713120200224,
        -0.17084515253844734,
        -0.1681620750500697,
        -0.16981144270806248,
        -0.16823223446831673,
        -0.16810584729756045,
        -0.17147204474895533,
        -0.17075233160167247,
        -0.16888937408395835,
        -0.16889447084056236,
        -0.16889499377315384,
        -0.16851617511591796,
        -0.16726683136221213,
        -0.16829886775942335,
        -0.17029350990472766,
        -0.17029398699088083,
        -0.18568318486322058,
        -0.18696472639221937,
        -0.18369514902552067,
        -0.18198125799078851,
        -0.18313399628991636,
        -0.17189228919644028,
        -0.1752052585129651,
        -0.1737778378143227,
        -0.1743646319550722,
        -0.1722007514453645,
        -0.16937696117537762,
        -0.17106680041118336,
        -0.17208111466649612,
        -0.17236664380685648,
        -0.17000332159819628,
        -0.16876470436056082,
        -0.16848784163196498,
        -0.16791132590888896,
        -0.1690931416293908,
        -0.17135343785406162,
        -0.16807825609979776,
        -0.16835041917668375,
        -0.16770118402523776,
        -0.1690802224723427,
        -0.1690351700245168,
        -0.16849012433202828,
        -0.16856157367880226,
        -0.1680370605200691,
        -0.16812806073176867,
        -0.16812862308211038,
        -0.16707806714018233,
        -0.1661343156233124,
        -0.1693578008539424,
        -0.16704795075530424,
        -0.16766917745316126,
        -0.16748216666765198,
        -0.1680591749367513,
        -0.16667558489074952,
        -0.1679078090062657,
        -0.1679081528410688,
        -0.16849072888276018,
        -0.1677386723468768,
        -0.16603030070685823,
        -0.16841937783882677,
        -0.168419752902732
    ],
    "split3_test_score": [
        -0.23089520561907112,
        -0.23331181646299276,
        -0.24036824935593407,
        -0.23761184165352303,
        -0.23983239271755796,
        -0.21843183051854417,
        -0.22007163109702851,
        -0.22684053552504788,
        -0.22747094489597344,
        -0.2276778696551024,
        -0.19933134412048253,
        -0.19867242392539983,
        -0.2012932079073378,
        -0.2025397394407801,
        -0.20254029252140307,
        -0.19452561215707323,
        -0.1979408542721989,
        -0.19996947400636306,
        -0.19902692802799904,
        -0.19902739338747463,
        -0.20220065226124348,
        -0.20331036555678417,
        -0.2035098221957046,
        -0.20341873616449285,
        -0.20341929794028313,
        -0.20665020429175107,
        -0.19974113631970447,
        -0.20976839117755253,
        -0.20977441256914758,
        -0.20977496422373493,
        -0.1846665539103039,
        -0.1994728410344683,
        -0.20850247188949653,
        -0.20850777501980783,
        -0.20850829377572525,
        -0.18584834402850323,
        -0.18879815321778348,
        -0.18184383266687,
        -0.1816271903535914,
        -0.1816275829001678,
        -0.19027278023267932,
        -0.19095945665614508,
        -0.19211664255115754,
        -0.192117908618969,
        -0.19211801979790538,
        -0.2387474407315332,
        -0.23296559708958722,
        -0.24355573610811154,
        -0.2383840833745731,
        -0.238639943349452,
        -0.22933786445888057,
        -0.21298450203383934,
        -0.21596885676481015,
        -0.2166227999531459,
        -0.2165216723813365,
        -0.19931161065516292,
        -0.20044296867854985,
        -0.2019118159144646,
        -0.19969955674115117,
        -0.19969992712980886,
        -0.20090502764878115,
        -0.20290359016418458,
        -0.20880983291989202,
        -0.20882444187080526,
        -0.20882462131354798,
        -0.18512550782754528,
        -0.18960454007465333,
        -0.18741495803643463,
        -0.18742018604550292,
        -0.18742069614541715,
        -0.2012707669906993,
        -0.1872511105757716,
        -0.18897609864363674,
        -0.1889829731049592,
        -0.1896143067372327,
        -0.19815746460131797,
        -0.20079749709253225,
        -0.2071847958861373,
        -0.20714835672111145,
        -0.20714904210625168,
        -0.1940005358137317,
        -0.19242658470350724,
        -0.19886074482960042,
        -0.19886413619115506,
        -0.19886449036775347,
        -0.19629208068406753,
        -0.20533042574025004,
        -0.20439538733023857,
        -0.20439908987408814,
        -0.20439945441335294,
        -0.23297524704163997,
        -0.23263313315869977,
        -0.23909721148430924,
        -0.2336393338607024,
        -0.23517943805727004,
        -0.21809686301383774,
        -0.2211932342666244,
        -0.21973457475199457,
        -0.21668774966980883,
        -0.2166890535096292,
        -0.21190928558082364,
        -0.21031893407906735,
        -0.20118672387250514,
        -0.20119156821711784,
        -0.20119207306676043,
        -0.20105886219822194,
        -0.20546514792094503,
        -0.19982143709610256,
        -0.19840722334920483,
        -0.19840778253606303,
        -0.19637943036259714,
        -0.19030497697683782,
        -0.18862877799820987,
        -0.18863435836502324,
        -0.1886349274546397,
        -0.20887615796713363,
        -0.19839331127719828,
        -0.20445682038986668,
        -0.20541334613988677,
        -0.20541398116367915,
        -0.1930838584539433,
        -0.2121539699926906,
        -0.2121883080273712,
        -0.2121928537197722,
        -0.21219332427584037,
        -0.19504637930007943,
        -0.19596394452032628,
        -0.19332280715522177,
        -0.1936466907831673,
        -0.1936471041729595,
        -0.194708535212698,
        -0.19068840013360502,
        -0.1921913587145717,
        -0.1925084950273711,
        -0.19250876475406628,
        -0.226253814359091,
        -0.23477231266775403,
        -0.23541288367150626,
        -0.23767527217700032,
        -0.2380269041653755,
        -0.21768859525999795,
        -0.2160545912013479,
        -0.22140755262153605,
        -0.2204451475518521,
        -0.2181998866946727,
        -0.21123593692791437,
        -0.20708852487787674,
        -0.21182164694730055,
        -0.21083183197965355,
        -0.21075660009050695,
        -0.20931925863231193,
        -0.20713144923476798,
        -0.2015457563010707,
        -0.20477985854364741,
        -0.20480148338191875,
        -0.20623440626356312,
        -0.20503990526402138,
        -0.20534542903406822,
        -0.20530286983895568,
        -0.20540967507546082,
        -0.20221409955964692,
        -0.2043692949062174,
        -0.20511145567086037,
        -0.2052963520256868,
        -0.20537739128453555,
        -0.20439281279583216,
        -0.20661012593128641,
        -0.2005190799367043,
        -0.20169561287532756,
        -0.2016959329923909,
        -0.1960290497579075,
        -0.1986888627259383,
        -0.2011171852896086,
        -0.19801808911841068,
        -0.19801856013176947,
        -0.19380639681494216,
        -0.1943675187874693,
        -0.1951859587440202,
        -0.19433485511140494,
        -0.19423138198212456
    ],
    "split4_test_score": [
        -0.18906020789294134,
        -0.1921352864724977,
        -0.191961377156006,
        -0.167479740306375,
        -0.16799356191544565,
        -0.18147233159358853,
        -0.19194515777434815,
        -0.1878800180801236,
        -0.18778117102841702,
        -0.18778398427984536,
        -0.16858806045846117,
        -0.17287215133157238,
        -0.17383656439548373,
        -0.17052149458043916,
        -0.170524884862479,
        -0.1949679658228862,
        -0.20005216092025876,
        -0.20795472516630512,
        -0.2079744320236658,
        -0.20797640087062996,
        -0.1856204115639431,
        -0.2008982439801386,
        -0.20334449542215166,
        -0.20335802637159411,
        -0.20314711204082925,
        -0.18156449876850725,
        -0.1875378513808466,
        -0.17584537048651566,
        -0.16412621487981496,
        -0.16412606675515323,
        -0.1800752140084886,
        -0.17190047837324648,
        -0.177278799846507,
        -0.1772737498830116,
        -0.17727325026617036,
        -0.186773532873689,
        -0.18309287960801648,
        -0.18270312558589125,
        -0.18270672902943622,
        -0.18270675227484037,
        -0.18243493611000905,
        -0.18361432156788898,
        -0.18779421475061675,
        -0.18779420661687155,
        -0.18779418639182202,
        -0.18715864820606795,
        -0.16381823685256314,
        -0.16175999170067606,
        -0.16507387729726739,
        -0.1651480887853788,
        -0.18327252041929085,
        -0.18602297463229006,
        -0.17347390157606957,
        -0.17710326940636292,
        -0.17710352318459197,
        -0.16710788198554963,
        -0.16411999727274082,
        -0.16262499056277846,
        -0.1624776649426885,
        -0.16248050093543792,
        -0.1805404909703521,
        -0.16802930784563616,
        -0.17015861010887737,
        -0.17047033825233687,
        -0.1704710694000952,
        -0.15038243077503602,
        -0.18122632787896162,
        -0.20092541557951732,
        -0.20093152513241166,
        -0.20093212437031255,
        -0.1746903543458451,
        -0.18501453620199712,
        -0.17959770294565103,
        -0.1795912578870988,
        -0.17958432315515446,
        -0.1957335668920338,
        -0.17960580463190265,
        -0.1808332739837518,
        -0.18321838097031737,
        -0.18321732152952813,
        -0.17954939799156044,
        -0.16652872389318077,
        -0.19278552636920895,
        -0.192818683248787,
        -0.19281864327918677,
        -0.1894484717879493,
        -0.1864473969380947,
        -0.1847681043232202,
        -0.184769407860295,
        -0.18476956115006574,
        -0.19654113624056307,
        -0.14970152223426633,
        -0.17416673084810877,
        -0.15833596901041408,
        -0.1587529513200598,
        -0.1847221625383633,
        -0.17301326293015265,
        -0.18885622160622353,
        -0.1887475658598049,
        -0.18432331869005938,
        -0.15944459071394715,
        -0.15248497370011857,
        -0.14685051853439587,
        -0.14743497339622824,
        -0.14743505487034442,
        -0.1573706490189581,
        -0.1468707673453088,
        -0.15157977231900235,
        -0.15157498087337326,
        -0.1515744859101935,
        -0.18083907276820577,
        -0.1618509125589582,
        -0.1600790593626489,
        -0.1594810767058742,
        -0.15975076236200392,
        -0.16332458320222462,
        -0.15743857966853067,
        -0.15836353676981563,
        -0.15315308510829348,
        -0.15315188211515066,
        -0.20729995467840232,
        -0.1584471724333725,
        -0.16449077717844915,
        -0.1652257007586553,
        -0.16522517999465444,
        -0.20816408262723676,
        -0.1810651704419518,
        -0.18205113979581908,
        -0.18205310691169532,
        -0.1820532701823195,
        -0.1962682364497985,
        -0.1934197136337341,
        -0.19100673548409017,
        -0.19080785377812293,
        -0.19080789683911067,
        -0.16051762983691484,
        -0.15903131082508937,
        -0.16239127463289157,
        -0.15848445938759448,
        -0.1616126097119331,
        -0.1471275092986962,
        -0.15135504344190204,
        -0.15478130298083212,
        -0.15330680094719115,
        -0.1525488120820273,
        -0.14465330440224336,
        -0.14660120915679817,
        -0.14001476574554503,
        -0.1385619085490121,
        -0.13860909190003287,
        -0.15055564880140151,
        -0.14176376686391137,
        -0.14560538516329766,
        -0.14430880074883395,
        -0.1453320103059637,
        -0.15296282632328204,
        -0.1480751402831358,
        -0.1553186142202157,
        -0.14921385182839939,
        -0.14921337098645107,
        -0.1670648523753581,
        -0.17319078753047415,
        -0.17530589823191028,
        -0.16917940059451222,
        -0.16958979376402483,
        -0.1811828700297684,
        -0.1772836500967092,
        -0.182917851025698,
        -0.1847008885606739,
        -0.1845970010466922,
        -0.19298358167849494,
        -0.19170723031729694,
        -0.19671354220130108,
        -0.18476076092738122,
        -0.18463727608940073,
        -0.19657725462927156,
        -0.19789419811939082,
        -0.19685118190232107,
        -0.2000419033068232,
        -0.20003709120294844
    ],
    "mean_test_score": [
        -0.13254578208670492,
        -0.13784912106190067,
        -0.13652917467183773,
        -0.13135159474893915,
        -0.1324412207425864,
        -0.1256906589117452,
        -0.13346845573818386,
        -0.1304709669136007,
        -0.13072822380236326,
        -0.13077060408796487,
        -0.1213725957497469,
        -0.11965050073739032,
        -0.12292301160204958,
        -0.12206725825473794,
        -0.12206824324425976,
        -0.12811635411739428,
        -0.12881818990383814,
        -0.129333212457541,
        -0.12954919589792974,
        -0.1295497877671508,
        -0.12567721183722064,
        -0.1296209226509279,
        -0.1300053486834473,
        -0.12998971946520918,
        -0.12994766456067477,
        -0.127693207314787,
        -0.12736474599486175,
        -0.12756564805238693,
        -0.1251979800082141,
        -0.12519804430540224,
        -0.12423612927504472,
        -0.12440223227259943,
        -0.12692198360720158,
        -0.1267957771649922,
        -0.12679580102371885,
        -0.12222345680199123,
        -0.12154973516469629,
        -0.1198197584450003,
        -0.11959880437725205,
        -0.11959886098527309,
        -0.12336692488024951,
        -0.12263809302580082,
        -0.12514358038544637,
        -0.125143074197794,
        -0.12514302617191642,
        -0.13149213599823023,
        -0.12876517420560668,
        -0.1317059379545002,
        -0.13118735230444825,
        -0.13037858909890243,
        -0.1283450870669135,
        -0.1258165449202444,
        -0.1250023083510036,
        -0.12581889423894949,
        -0.12596096358912276,
        -0.11800281216090422,
        -0.11889011249946843,
        -0.11882245457206872,
        -0.11775299800525438,
        -0.11775377054628826,
        -0.12049606882374209,
        -0.11915710198647127,
        -0.12043988928634242,
        -0.12056000660641782,
        -0.12043790813962688,
        -0.11327115320386663,
        -0.12064851103831431,
        -0.12364696551568662,
        -0.12365364488747618,
        -0.12365388306440339,
        -0.12074024113302426,
        -0.12069110164582728,
        -0.1193808201701104,
        -0.11984008224332503,
        -0.11996494470572139,
        -0.1245771411439883,
        -0.12130086144830472,
        -0.12295692817115819,
        -0.12360355050867969,
        -0.12360350696558946,
        -0.120178128189062,
        -0.11618688744513543,
        -0.12408886456700967,
        -0.1240498937283306,
        -0.12404996160249648,
        -0.12234498236796501,
        -0.12420899481051402,
        -0.12319911965006954,
        -0.12319989798205351,
        -0.12319997103238597,
        -0.13062504802304412,
        -0.12454331724432761,
        -0.13045917224935338,
        -0.12752470796246365,
        -0.12912824844263368,
        -0.12626345003404996,
        -0.12616573514291735,
        -0.12807746777330029,
        -0.1274805671324025,
        -0.12636169547488144,
        -0.12033301160004897,
        -0.11765480310110046,
        -0.11558610863561251,
        -0.11590330814715306,
        -0.1152109268911536,
        -0.11544295767267751,
        -0.11423990165813784,
        -0.11594920384383897,
        -0.11536496829641855,
        -0.1153650179700002,
        -0.11858791415432587,
        -0.11356410084560653,
        -0.11433651915271088,
        -0.1134297609603325,
        -0.11358351759813808,
        -0.1191756755370785,
        -0.11578869112233421,
        -0.1171835181697132,
        -0.11626993908838253,
        -0.11626987112979781,
        -0.12468642116046531,
        -0.118757922490263,
        -0.119024012548037,
        -0.11887711905857161,
        -0.1188517480962998,
        -0.12572016324700358,
        -0.12008531844610035,
        -0.11932621213505638,
        -0.11944663305964123,
        -0.11944675999323746,
        -0.12377648396323075,
        -0.12102996914433492,
        -0.12245721685084614,
        -0.12289823383719481,
        -0.12289113120154256,
        -0.12372515071990162,
        -0.12725948669613668,
        -0.1284365839486777,
        -0.1282713682169081,
        -0.12919867924223954,
        -0.11761898356288895,
        -0.11867706397162499,
        -0.12051415860264544,
        -0.12023742514097506,
        -0.11907153305656973,
        -0.11533891701735768,
        -0.11513262242280871,
        -0.11496504257218328,
        -0.11479196947248108,
        -0.11427951722584626,
        -0.11575018829027636,
        -0.11344093381748596,
        -0.11296375283218707,
        -0.11370056560270951,
        -0.11429322469328093,
        -0.11480812006082577,
        -0.1138176291453163,
        -0.11545733209658957,
        -0.11444640382534914,
        -0.11450334762567027,
        -0.11715180238806407,
        -0.11872474394407376,
        -0.11912639791698756,
        -0.11823989891824502,
        -0.11822962371936799,
        -0.11983364337973099,
        -0.11984829967774435,
        -0.12064618961495648,
        -0.12040957529721319,
        -0.12041850895339597,
        -0.1216394854515062,
        -0.12234909171751122,
        -0.1228777425477601,
        -0.12055899210279268,
        -0.12035438150669601,
        -0.12276738981355631,
        -0.12227735343208142,
        -0.12273313636344282,
        -0.12350093639472011,
        -0.12347774001753938
    ],
    "std_test_score": [
        0.08854542912569162,
        0.0881657156973931,
        0.08781238481473565,
        0.08240533624613469,
        0.08313486129100701,
        0.07850625877116485,
        0.07931648989101073,
        0.08007178920162232,
        0.08053615866349345,
        0.0805867119558134,
        0.07299457299132757,
        0.07423473836073938,
        0.07690014011610746,
        0.07672963976378235,
        0.07673057945143488,
        0.07660823423797458,
        0.07655240279244879,
        0.07903599596286046,
        0.07909356886902616,
        0.07909444436983812,
        0.07581275414442608,
        0.07814618862419613,
        0.07906880321615001,
        0.07905784332899593,
        0.07901914980474747,
        0.07431848399587161,
        0.07475547003869333,
        0.07392894604860978,
        0.07253019862963164,
        0.0725307009602282,
        0.06900585398345564,
        0.06994976780362357,
        0.07289794197557657,
        0.07305386624499306,
        0.07305422622187341,
        0.07420216753786567,
        0.07410110270857423,
        0.07330558027316353,
        0.07348686773109614,
        0.07348723325835968,
        0.07575308053168346,
        0.07556851962360833,
        0.07707570404106545,
        0.07707856852776389,
        0.07707885773208992,
        0.08916943329496792,
        0.08525824414269026,
        0.08734962202972074,
        0.08468914006016663,
        0.08475186483333026,
        0.08326739993640134,
        0.08145944843603951,
        0.07857972295075834,
        0.07897265897980331,
        0.0787026949619265,
        0.07478423785298825,
        0.0727648457046867,
        0.07328064762667175,
        0.07344359467076962,
        0.07344433475323371,
        0.07668119523183538,
        0.07663023469984534,
        0.0786168661189158,
        0.07859654919559272,
        0.07874446254945547,
        0.06931302144025302,
        0.07519194094233794,
        0.07790846670823266,
        0.07790837123965774,
        0.07790883798238457,
        0.07542900919897923,
        0.0741294865266971,
        0.07480714173956528,
        0.07390246939684035,
        0.07402007703999908,
        0.07805033191426335,
        0.07707052449567284,
        0.07841156373979905,
        0.07855939606171483,
        0.07855958084386529,
        0.07446944845012204,
        0.07285654396019149,
        0.07904620568781516,
        0.07902581396953971,
        0.07902604702917201,
        0.07732514108135619,
        0.07849929194604029,
        0.07838081294172287,
        0.07838365155096522,
        0.07838394088409875,
        0.09014633181366212,
        0.08457995773361689,
        0.08591231259208833,
        0.08322159135076179,
        0.08288506555251755,
        0.0801357044678599,
        0.07887762246978709,
        0.08228553676669671,
        0.08166038968746943,
        0.08105427208382034,
        0.07552275829430057,
        0.07435900467213688,
        0.07318567172771959,
        0.07335198130615908,
        0.07281636299015708,
        0.0756534532879426,
        0.07489890825139972,
        0.07316636151324563,
        0.07291138425788575,
        0.07291174509493817,
        0.07708035132083244,
        0.07361480465549684,
        0.07359926179856124,
        0.07245788884330336,
        0.07236339592919994,
        0.07801836295249884,
        0.07503809285570646,
        0.07675737744971768,
        0.07652639591938676,
        0.07652657209065236,
        0.08135128305569073,
        0.07690750336183946,
        0.07919307162981472,
        0.07905255130238563,
        0.07903693776666591,
        0.08161563854769006,
        0.07699982973395274,
        0.07644964974006954,
        0.07644862099319873,
        0.07644891043025083,
        0.07769593710598392,
        0.07749941988635133,
        0.07587358372355076,
        0.07611610061329686,
        0.07612418204381462,
        0.08485186350919537,
        0.08477353066860067,
        0.08358823237538442,
        0.08305890563762897,
        0.08352104034984435,
        0.07841297581870355,
        0.0789543503038902,
        0.07994038257295721,
        0.07954135329403891,
        0.0787741821197669,
        0.07624328810141706,
        0.07573042376604919,
        0.07657172854606498,
        0.0759732677754758,
        0.07564156599387532,
        0.07650962680319083,
        0.07527824829383249,
        0.07415459712887178,
        0.074849841891814,
        0.07535557985440129,
        0.07670951390194203,
        0.07580526688952785,
        0.07617843367089083,
        0.07584232103326706,
        0.07581129648735677,
        0.07718814952770266,
        0.07857557679752088,
        0.07908059030468363,
        0.07792762116035346,
        0.07818446094599857,
        0.0798460343037961,
        0.07897060774963782,
        0.07868415668272237,
        0.07933631590331121,
        0.07950017049477305,
        0.07894552853106887,
        0.07886178712905467,
        0.0809272144244739,
        0.07785990477882704,
        0.07807380460755088,
        0.07854757759125545,
        0.07962317568969916,
        0.07836296225689092,
        0.0793127632808321,
        0.07929524869738507
    ],
    "rank_test_score": [
        177,
        180,
        179,
        173,
        176,
        133,
        178,
        168,
        170,
        171,
        86,
        61,
        102,
        89,
        90,
        151,
        156,
        159,
        160,
        161,
        132,
        162,
        165,
        164,
        163,
        149,
        145,
        148,
        130,
        131,
        121,
        122,
        143,
        141,
        142,
        91,
        87,
        62,
        59,
        60,
        107,
        96,
        129,
        128,
        127,
        174,
        155,
        175,
        172,
        166,
        153,
        135,
        126,
        136,
        137,
        39,
        49,
        46,
        37,
        38,
        76,
        53,
        75,
        79,
        74,
        2,
        81,
        112,
        113,
        114,
        83,
        82,
        56,
        64,
        66,
        124,
        85,
        103,
        111,
        110,
        68,
        30,
        119,
        117,
        118,
        93,
        120,
        104,
        105,
        106,
        169,
        123,
        167,
        147,
        157,
        139,
        138,
        150,
        146,
        140,
        70,
        36,
        25,
        28,
        19,
        23,
        9,
        29,
        21,
        22,
        42,
        5,
        12,
        3,
        6,
        54,
        27,
        34,
        32,
        31,
        125,
        45,
        50,
        48,
        47,
        134,
        67,
        55,
        57,
        58,
        116,
        84,
        95,
        101,
        100,
        115,
        144,
        154,
        152,
        158,
        35,
        43,
        77,
        69,
        51,
        20,
        18,
        17,
        15,
        10,
        26,
        4,
        1,
        7,
        11,
        16,
        8,
        24,
        13,
        14,
        33,
        44,
        52,
        41,
        40,
        63,
        65,
        80,
        72,
        73,
        88,
        94,
        99,
        78,
        71,
        98,
        92,
        97,
        109,
        108
    ]
}