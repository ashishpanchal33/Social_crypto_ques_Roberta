{
    "mean_fit_time": [
        9.917999458312988,
        9.639190435409546,
        10.406999492645264,
        9.940199661254884,
        10.101799869537354,
        9.178999900817871,
        9.258600854873658,
        9.01859974861145,
        9.296200370788574,
        9.429599952697753,
        9.07820029258728,
        8.628599214553834,
        9.06780185699463,
        8.928799819946288,
        8.733600664138795,
        8.939999914169311,
        8.487197923660279,
        8.900801086425782,
        8.60940089225769,
        8.858399486541748,
        8.616000318527222,
        8.771000099182128,
        8.705799531936645,
        8.813400173187256,
        8.362400674819947,
        8.992800760269166,
        8.44000072479248,
        8.832200241088866,
        8.38040051460266,
        8.582398462295533,
        8.517399454116822,
        8.715400123596192,
        8.885200214385986,
        8.470799827575684,
        8.747399425506591,
        8.551799488067626,
        8.730400228500367,
        8.327203178405762,
        8.86020016670227,
        8.457600641250611,
        8.826399087905884,
        8.371202087402343,
        8.74179940223694,
        8.550400447845458,
        8.932800102233887,
        10.969400215148926,
        10.39920153617859,
        10.554399919509887,
        11.097201013565064,
        10.318399810791016,
        9.678800821304321,
        10.05100131034851,
        9.494599962234497,
        9.804001235961914,
        9.41560001373291,
        9.701397609710693,
        9.213599157333373,
        9.50780110359192,
        9.25640025138855,
        9.574800395965577,
        9.014599609375,
        9.453601598739624,
        8.825200319290161,
        9.592600011825562,
        8.846800136566163,
        9.27920036315918,
        9.106799554824828,
        9.229600667953491,
        9.10200080871582,
        9.388401317596436,
        8.959999752044677,
        9.01959981918335,
        9.040801620483398,
        9.003600549697875,
        9.236399793624878,
        8.755202436447144,
        9.281800413131714,
        8.962800025939941,
        9.209799528121948,
        8.99600133895874,
        9.17760009765625,
        8.812400817871094,
        9.193000411987304,
        9.046600389480592,
        8.880600595474244,
        8.580400323867797,
        9.102600622177125,
        9.138001775741577,
        8.640599584579467,
        8.897401142120362,
        12.016799592971802,
        11.872001695632935,
        11.745000171661378,
        12.021600437164306,
        11.398202896118164,
        10.759600162506104,
        10.340800714492797,
        11.133600425720214,
        9.847199964523316,
        11.17560043334961,
        9.943800449371338,
        10.805599927902222,
        9.943400335311889,
        10.431599617004395,
        10.130400371551513,
        9.91199975013733,
        10.070800685882569,
        9.612200260162354,
        10.156999015808106,
        9.692201614379883,
        10.187800168991089,
        9.683200979232788,
        10.297399759292603,
        9.748999643325806,
        9.907001304626466,
        9.441800117492676,
        9.749999046325684,
        9.48359980583191,
        10.114599418640136,
        9.718800926208496,
        10.09859914779663,
        9.362201070785522,
        9.925999975204467,
        9.336201047897339,
        9.988400602340699,
        9.340998315811158,
        9.614598321914674,
        9.786799907684326,
        9.386600303649903,
        9.74240164756775,
        9.056800651550294,
        9.58100118637085,
        9.373199510574342,
        9.478000736236572,
        9.222200441360474,
        23.488000011444093,
        21.84859962463379,
        23.53680028915405,
        21.16839952468872,
        23.4602002620697,
        18.253801918029787,
        18.98040065765381,
        18.95980033874512,
        18.818200540542602,
        18.172800540924072,
        18.256000804901124,
        17.48160104751587,
        17.840599632263185,
        17.495599508285522,
        17.17379946708679,
        16.969600629806518,
        15.940600061416626,
        16.976201868057252,
        16.123001098632812,
        16.6656005859375,
        16.275400114059448,
        16.19440107345581,
        16.21100072860718,
        16.379201030731203,
        16.20000033378601,
        15.631999588012695,
        15.60059962272644,
        15.229998970031739,
        16.00400013923645,
        14.922400426864623,
        16.15640115737915,
        14.385801744461059,
        15.842400121688843,
        14.604800605773926,
        15.736599111557007,
        14.599200963973999,
        14.85019884109497,
        14.376400423049926,
        14.740799474716187,
        13.950800943374634,
        14.946601486206054,
        14.180400276184082,
        14.372799444198609,
        13.46459903717041,
        12.3094012260437
    ],
    "std_fit_time": [
        0.911437360121381,
        0.35573251021043106,
        0.18798333955774973,
        0.8204048282073514,
        0.8687269224336246,
        0.28265679905632646,
        0.8939853259522128,
        0.2711522675177925,
        0.8711710999174533,
        0.990189256592472,
        0.27066043067444856,
        0.20934628647295425,
        0.7422611523309832,
        0.2617395500671852,
        0.9874027321867255,
        0.7698281371776402,
        0.16043077787144183,
        0.7872340351651277,
        0.46270544514829426,
        0.7912258847112834,
        0.37091180112041156,
        0.6874080026160616,
        0.32745778394098807,
        0.8146533741616266,
        0.23131163611380937,
        0.7924177329823763,
        0.2862161069548356,
        0.7483334595141569,
        0.3916619308701285,
        0.9078759217577531,
        0.3587158016993273,
        0.7330894243914543,
        0.6483919363392422,
        0.35115399070133596,
        0.8584061473138164,
        0.3662501280592384,
        0.8241045242703015,
        0.4419555399173207,
        0.7869720622266284,
        0.3189311459530824,
        0.7001366824106782,
        0.21717379276962903,
        0.7641760879776633,
        0.34369880687039234,
        0.680244961258517,
        1.1296623344498624,
        0.4581956531825056,
        0.5364860872255017,
        0.9920052245934561,
        0.9773185176924448,
        0.38161976683021087,
        1.0601664722997703,
        0.5599059473814433,
        0.8079995121824441,
        0.4149240868810167,
        0.9510993507156482,
        0.3199682843668144,
        0.9598747959749212,
        0.4392013323233777,
        0.6947260013703325,
        0.33242100985799966,
        0.8951509001275841,
        0.1913757208787024,
        0.7233932795441195,
        0.342703117944628,
        0.8990128312103067,
        0.34729870529237494,
        0.7321098888007667,
        0.25551244035090637,
        0.7432234728043513,
        0.6970353277380896,
        0.17392847177018186,
        0.7707974122376188,
        0.49736638810951983,
        0.9840457614272471,
        0.40104903689282917,
        0.8213495438782148,
        0.28427348804433816,
        0.7610724326232473,
        0.32744425167263347,
        0.822815061543833,
        0.19883307616819315,
        0.8866350468563393,
        0.7486431014421804,
        0.2172405416613244,
        0.1888175038836869,
        0.8871389064943703,
        0.7849269008433151,
        0.34743901889714157,
        0.2861371880306366,
        0.7606844911884948,
        0.7561717662342314,
        0.5302661219461621,
        1.099249737565475,
        0.6844277817594072,
        1.1992846864634719,
        0.4433567505283812,
        1.0835206430273152,
        0.23697127826103803,
        0.8353268856895247,
        0.3592145617439395,
        0.8671844287903693,
        0.27204420761037784,
        0.9535980971745628,
        0.19624379433859163,
        0.6471468532382421,
        0.7605625194802405,
        0.2864248031533258,
        0.673712094155729,
        0.19420901758132908,
        0.9277544200301698,
        0.2868482708653852,
        1.0515475331219402,
        0.41933526084155015,
        0.7670403044550937,
        0.3768958560619628,
        0.7181388119059474,
        0.48344311283270186,
        1.1246874891080219,
        0.5908972118719014,
        0.912434886984813,
        0.2551273106537197,
        1.0621672392066197,
        0.3931666684810811,
        0.9913711899720447,
        0.20872697766033987,
        0.8678919252175725,
        0.8189085186671973,
        0.3312173529575145,
        0.8069159805800614,
        0.36047427842745067,
        0.8516289762370797,
        0.1962888664364257,
        0.9475304367220861,
        0.4612256667725128,
        2.61199363591874,
        1.5651797912068925,
        1.6149712061770054,
        1.9001029343484446,
        1.6511957367291898,
        1.4248681002010588,
        1.2991793109002525,
        1.094026807910488,
        1.5767080160910496,
        0.9733944589587263,
        1.836402213848938,
        2.0343257876178873,
        0.22330981941337913,
        1.6726236756907662,
        0.8909418063311275,
        1.832409795162184,
        0.8324497248166615,
        0.6345296928221059,
        1.1212656312726432,
        1.592683550319586,
        0.9093894534738366,
        1.7331225502775434,
        1.1255495664198094,
        1.3660359550353731,
        1.410689268869701,
        0.9587732263802562,
        1.4945656155489926,
        1.8807026282583759,
        1.6698279988974634,
        1.8851736632068559,
        1.3007547332719922,
        1.1535386984506377,
        1.692184902935539,
        0.6543622194441594,
        1.6283542296763496,
        1.1238945355329975,
        1.385411978161283,
        1.0849706025788912,
        1.1996864377605756,
        1.2471259563206052,
        1.7554158434336138,
        1.9541003127831837,
        0.8557776441518014,
        0.9179063692089978,
        1.7593882316458913
    ],
    "mean_score_time": [
        0.09859933853149414,
        0.08719892501831054,
        0.10219988822937012,
        0.10279951095581055,
        0.1064002513885498,
        0.0900001049041748,
        0.0971994400024414,
        0.10820064544677735,
        0.09759979248046875,
        0.09900145530700684,
        0.09260029792785644,
        0.09480128288269044,
        0.09640011787414551,
        0.09800267219543457,
        0.10120010375976562,
        0.0984004020690918,
        0.08980154991149902,
        0.08759870529174804,
        0.09220013618469239,
        0.09300036430358886,
        0.07920050621032715,
        0.09280009269714355,
        0.09399995803833008,
        0.10120105743408203,
        0.09999971389770508,
        0.0923997402191162,
        0.10379819869995117,
        0.10399842262268066,
        0.10759835243225098,
        0.09400062561035157,
        0.0893986701965332,
        0.08860259056091309,
        0.09700284004211426,
        0.09660067558288574,
        0.0913996696472168,
        0.09700007438659668,
        0.09620051383972168,
        0.10019721984863281,
        0.09400019645690919,
        0.10580081939697265,
        0.09159984588623046,
        0.09219927787780761,
        0.08920059204101563,
        0.09160027503967286,
        0.08900041580200195,
        0.09819979667663574,
        0.09519963264465332,
        0.09879865646362304,
        0.0993992805480957,
        0.10040040016174316,
        0.08640022277832031,
        0.09639987945556641,
        0.08379902839660644,
        0.0994002342224121,
        0.09859867095947265,
        0.09420080184936523,
        0.09400067329406739,
        0.08379898071289063,
        0.08219943046569825,
        0.08759932518005371,
        0.08880033493041992,
        0.1061983585357666,
        0.099399995803833,
        0.09900097846984864,
        0.09680037498474121,
        0.10480012893676757,
        0.09300127029418945,
        0.09459824562072754,
        0.10280070304870606,
        0.1009988784790039,
        0.1008000373840332,
        0.09680042266845704,
        0.09580059051513672,
        0.08459949493408203,
        0.1261993408203125,
        0.10599756240844727,
        0.09560027122497558,
        0.09540085792541504,
        0.09120125770568847,
        0.09580187797546387,
        0.10159964561462402,
        0.09360132217407227,
        0.09960026741027832,
        0.10079941749572754,
        0.09699931144714355,
        0.09259991645812989,
        0.08819966316223145,
        0.09579768180847167,
        0.09159951210021973,
        0.1073997974395752,
        0.09080066680908203,
        0.10419816970825195,
        0.0952003002166748,
        0.08940000534057617,
        0.09439730644226074,
        0.08320064544677734,
        0.09320263862609864,
        0.10140008926391601,
        0.11339902877807617,
        0.08919992446899414,
        0.0977996826171875,
        0.1048006534576416,
        0.08959894180297852,
        0.09159998893737793,
        0.09599957466125489,
        0.09100031852722168,
        0.09979867935180664,
        0.10620112419128418,
        0.09459972381591797,
        0.0987978458404541,
        0.09039902687072754,
        0.08399872779846192,
        0.09700002670288085,
        0.0922008991241455,
        0.09119954109191894,
        0.09239964485168457,
        0.09200053215026856,
        0.0965991497039795,
        0.09439921379089355,
        0.09900021553039551,
        0.09460029602050782,
        0.09060006141662598,
        0.08819923400878907,
        0.09419813156127929,
        0.08879899978637695,
        0.09480094909667969,
        0.09560127258300781,
        0.09580068588256836,
        0.0988011360168457,
        0.08979964256286621,
        0.09380159378051758,
        0.10000205039978027,
        0.09680032730102539,
        0.0896003246307373,
        0.06739964485168456,
        0.08819942474365235,
        0.09379982948303223,
        0.09879822731018066,
        0.10300159454345703,
        0.10099992752075196,
        0.09839806556701661,
        0.09159889221191406,
        0.09539928436279296,
        0.09919929504394531,
        0.0942004680633545,
        0.0983996868133545,
        0.10460014343261718,
        0.0996002197265625,
        0.08519945144653321,
        0.10059971809387207,
        0.10280022621154786,
        0.10099935531616211,
        0.09679861068725586,
        0.08560013771057129,
        0.0979997158050537,
        0.09840059280395508,
        0.08900237083435059,
        0.08639984130859375,
        0.10180001258850098,
        0.0989997386932373,
        0.09679975509643554,
        0.09260244369506836,
        0.08320064544677734,
        0.10480055809020997,
        0.10140061378479004,
        0.10299878120422364,
        0.09619841575622559,
        0.09859986305236816,
        0.08799920082092286,
        0.1044003963470459,
        0.08539848327636719,
        0.09540028572082519,
        0.10519909858703613,
        0.09280052185058593,
        0.08779988288879395,
        0.11559796333312988,
        0.08519968986511231,
        0.09540066719055176,
        0.08340225219726563,
        0.0566002368927002
    ],
    "std_score_time": [
        0.023602973181812818,
        0.017948561974564018,
        0.01731414251115422,
        0.0043531627354295105,
        0.01423694706051162,
        0.015633726398145156,
        0.009367030094275062,
        0.01184009238721922,
        0.006053822438187561,
        0.005965429977434789,
        0.007338425634394727,
        0.002400586910245387,
        0.010209845958760585,
        0.008072006815791186,
        0.012269807286032375,
        0.01500172029654044,
        0.0057406042567310946,
        0.009026787101729796,
        0.012905762082752478,
        0.00672304002203111,
        0.012172630698987757,
        0.005345264253430193,
        0.006387458106368628,
        0.01833620587423123,
        0.011331350653189808,
        0.018456634841840205,
        0.012481172904431438,
        0.015270108400208565,
        0.01184203711931862,
        0.005404272887764836,
        0.007392085840198454,
        0.004496981685777262,
        0.00666076171683909,
        0.018916504285388408,
        0.006052905609072775,
        0.013622976756744613,
        0.006493774725712085,
        0.014630484803522631,
        0.009188040991896795,
        0.01691600723849825,
        0.005953939919200307,
        0.007678935278617753,
        0.006794853734714953,
        0.0054634176328822726,
        0.017629719734264096,
        0.004400396487849864,
        0.007547254728562686,
        0.009107512010122965,
        0.0123699314766546,
        0.006559987600146778,
        0.00970700366919881,
        0.007939404466717353,
        0.013789645181351989,
        0.01114682934801341,
        0.005238475970261952,
        0.0069678176603277875,
        0.00779707828151342,
        0.0051925611822610865,
        0.010067975619941404,
        0.007863875699132487,
        0.0138324988619256,
        0.020438934541894976,
        0.005499278642350095,
        0.007183271372222007,
        0.009064205496428982,
        0.010127311313482353,
        0.00997895568887307,
        0.011620382203639087,
        0.011408619669297803,
        0.015860799495907362,
        0.023818367825164295,
        0.007960857340284056,
        0.004708658104616651,
        0.017816285784116877,
        0.02747604062641188,
        0.02093329335459914,
        0.01481417032572826,
        0.006499271815057023,
        0.004790725024699121,
        0.007627475451567477,
        0.007657904602609571,
        0.011926133093332906,
        0.011341542567491477,
        0.01077786402272678,
        0.009939237706190117,
        0.008956782048525829,
        0.006209593201644106,
        0.006971530619640268,
        0.0029389087950526293,
        0.024565769315718435,
        0.013167254291118723,
        0.015407025180020153,
        0.01653294840611014,
        0.012093487092403044,
        0.014336804340267862,
        0.006430819280589117,
        0.006616334319407624,
        0.008237803752879611,
        0.01751084835589133,
        0.01983324837832387,
        0.006880712913131329,
        0.007960147003465217,
        0.006469136626044425,
        0.006915956416786812,
        0.006065821401324684,
        0.010770465461457187,
        0.02040856722349576,
        0.013760686431103297,
        0.007390804673332968,
        0.008158821997706272,
        0.010071501423023458,
        0.018898411340181255,
        0.004603981230884299,
        0.017266506570777364,
        0.00788399054858774,
        0.008500001078188994,
        0.00756278495385928,
        0.007282149395014115,
        0.013764538941961649,
        0.003285459028742198,
        0.008089815229328215,
        0.009286547154602082,
        0.01864805279973759,
        0.006012654420929963,
        0.015104745165690206,
        0.009129820576979293,
        0.005678034794807344,
        0.015459080008195222,
        0.023861308498417694,
        0.022638033030436072,
        0.009130532750346886,
        0.007072723499650256,
        0.011248898977910052,
        0.008822443352275194,
        0.014039405900153108,
        0.011512381641442264,
        0.018871758210471535,
        0.0035999193368983556,
        0.009675122176434826,
        0.006355946339124398,
        0.011772057477961983,
        0.016559500962544795,
        0.01330708539468101,
        0.010665457311607486,
        0.01638839159071303,
        0.012043423120888306,
        0.009520806399847889,
        0.010557287037690054,
        0.018862234912707766,
        0.0064060865981086105,
        0.009805318451596195,
        0.0195554451054766,
        0.021217058397932576,
        0.014800442275194167,
        0.017832529498510146,
        0.013153920216920436,
        0.02177216707898722,
        0.015053488327205182,
        0.008327260848538997,
        0.018374828444441802,
        0.012905602893479456,
        0.02107851893620489,
        0.029787053672055218,
        0.009347072504966575,
        0.02018608068560922,
        0.010295194231124639,
        0.016558358552245935,
        0.010150501328090087,
        0.01970834221835201,
        0.00866139153550029,
        0.019273155381119164,
        0.006621055529372765,
        0.007222871708754057,
        0.020024211750795162,
        0.016545063408196965,
        0.0096871716850908,
        0.020063552155052594,
        0.012354456845396593,
        0.01007093880411594,
        0.00989199709001049
    ],
    "param_eval_metric": [
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse"
    ],
    "param_learning_rate": [
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.3,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05
    ],
    "param_max_depth": [
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6
    ],
    "param_min_child_weight": [
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "param_n_estimators": [
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000
    ],
    "param_objective": [
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror"
    ],
    "param_predictor": [
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor"
    ],
    "param_random_state": [
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123
    ],
    "param_reg_alpha": [
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47,
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47,
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47,
        0.005,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.05,
        0.11,
        0.11,
        0.11,
        0.11,
        0.11,
        0.17,
        0.17,
        0.17,
        0.17,
        0.17,
        0.23,
        0.23,
        0.23,
        0.23,
        0.23,
        0.29,
        0.29,
        0.29,
        0.29,
        0.29,
        0.35,
        0.35,
        0.35,
        0.35,
        0.35,
        0.41,
        0.41,
        0.41,
        0.41,
        0.41,
        0.47,
        0.47,
        0.47,
        0.47,
        0.47
    ],
    "param_reg_lambda": [
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.3,
        0.1,
        0.01,
        0.001,
        0.0001
    ],
    "param_tree_method": [
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist"
    ],
    "params": [
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.3,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.11,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.17,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.23,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.35,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.41,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.3,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.05,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.47,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        }
    ],
    "split0_test_score": [
        -0.13793712222474785,
        -0.13581635174404796,
        -0.12835861504284582,
        -0.12769138328833213,
        -0.13270720923195028,
        -0.14682433621204996,
        -0.14756087508025895,
        -0.14560653044577676,
        -0.14600462212020152,
        -0.1460905357687422,
        -0.16443367362333786,
        -0.16442691803433943,
        -0.16374495218134275,
        -0.16364011950127597,
        -0.1636392139151507,
        -0.16890424957496544,
        -0.1686385387761105,
        -0.16791343545830922,
        -0.1679137762083373,
        -0.16791381768129082,
        -0.16913222685889603,
        -0.1704086433762731,
        -0.16970675602937918,
        -0.1697075979721099,
        -0.16970762603687678,
        -0.17234427057477764,
        -0.17215737538921072,
        -0.17320651905581252,
        -0.17320532665541702,
        -0.17320527445240705,
        -0.17717787760177334,
        -0.17518619624740356,
        -0.1753375406070737,
        -0.17542047083916149,
        -0.17542049186204703,
        -0.178977306989486,
        -0.1799912102613661,
        -0.17888697624158434,
        -0.17894861570935244,
        -0.17894860664061762,
        -0.1814216011596296,
        -0.18263207668773027,
        -0.18134518700504815,
        -0.18134486097597077,
        -0.18129802741955706,
        -0.13487404775157905,
        -0.13337865206129232,
        -0.13143816044219023,
        -0.13235155421630582,
        -0.1323791791181882,
        -0.1500328939229807,
        -0.14909700091378256,
        -0.1489538032406791,
        -0.1477965120031012,
        -0.1477942332774405,
        -0.1630518657852398,
        -0.1636662992789213,
        -0.1626813405941215,
        -0.16400592142818843,
        -0.1640047222743419,
        -0.16787198581987153,
        -0.16841066769466478,
        -0.1680568823556153,
        -0.16805657403246138,
        -0.1680565460030874,
        -0.16987275576163993,
        -0.1695435414805974,
        -0.1697476469971105,
        -0.16960522164830394,
        -0.1696051093978956,
        -0.1727274477415753,
        -0.1724202495113993,
        -0.1731855790022065,
        -0.17320631579674814,
        -0.17320616032836367,
        -0.1755365246181497,
        -0.17639618405907834,
        -0.1757832676078072,
        -0.1757825237608137,
        -0.17578256432887948,
        -0.17918364643663603,
        -0.1799485577064704,
        -0.17959277773158674,
        -0.1794144078108158,
        -0.17947384384754675,
        -0.18233008581783408,
        -0.1825088716199292,
        -0.18276680209835666,
        -0.1820122721020744,
        -0.18211454405926944,
        -0.13685505304713755,
        -0.13499815526704112,
        -0.13778452414528095,
        -0.13646752152565483,
        -0.13598366337633636,
        -0.151090835839642,
        -0.15023320275812385,
        -0.14898440722570386,
        -0.1511783957528706,
        -0.15117517287243687,
        -0.16336697413121912,
        -0.16425011861221175,
        -0.16376089989087117,
        -0.16352023140959898,
        -0.16351925910318227,
        -0.1678722422383009,
        -0.16842752096253472,
        -0.1687479169741768,
        -0.16847722330484746,
        -0.16847705507389027,
        -0.1695184919847429,
        -0.1694754839815502,
        -0.17007787072734276,
        -0.1698939474473163,
        -0.16989391314158644,
        -0.17261648998036583,
        -0.17254553685648705,
        -0.1734151039189563,
        -0.17305490122736056,
        -0.17305502257614075,
        -0.17620412069096755,
        -0.1759381523209502,
        -0.1755850140986273,
        -0.1755852298144639,
        -0.17558537207214722,
        -0.17869095505948665,
        -0.1793165856652854,
        -0.1790410208494624,
        -0.17906364708798592,
        -0.17906357353543054,
        -0.18226796779006768,
        -0.1823294591973155,
        -0.18236325107310736,
        -0.1824461593223808,
        -0.18244605406254244,
        -0.13827803165438465,
        -0.13436809902919952,
        -0.13381063952645772,
        -0.13436115277131824,
        -0.13533671474088993,
        -0.15201963284238398,
        -0.15145089398398845,
        -0.15101189455694977,
        -0.1517553316907985,
        -0.15146652689318918,
        -0.16357018083567654,
        -0.16350873580524608,
        -0.1638812326244639,
        -0.16445624134905037,
        -0.1644076652888028,
        -0.16858850934938302,
        -0.16851450500452061,
        -0.16857036012653842,
        -0.16850478364194796,
        -0.16837419569356277,
        -0.16997050818016135,
        -0.16980039687170154,
        -0.16971076603296475,
        -0.16980498837836197,
        -0.16983654252750366,
        -0.1729726463095251,
        -0.17276315756304014,
        -0.1729757881456005,
        -0.17293826380444502,
        -0.17298470332079424,
        -0.17568324975107885,
        -0.17554253546702808,
        -0.1759656570679071,
        -0.17565993284335427,
        -0.17576385490782678,
        -0.17875507588701714,
        -0.17880314133076747,
        -0.1787265428512692,
        -0.17882011992844352,
        -0.17882198937525953,
        -0.1827953221669855,
        -0.18269493033140086,
        -0.18290659586326463,
        -0.1826350201682065,
        -0.18262234217418086
    ],
    "split1_test_score": [
        -0.21369442734564773,
        -0.20196691210660864,
        -0.20290093565204875,
        -0.2031499307509684,
        -0.2045509255321127,
        -0.21117704083209665,
        -0.2132452950488839,
        -0.2141715531433096,
        -0.21542878095500553,
        -0.21542986683845905,
        -0.20620997600894142,
        -0.2097762948829331,
        -0.20921299725995857,
        -0.20856126194915195,
        -0.20933854571097762,
        -0.20835863718083297,
        -0.2110233865487061,
        -0.21139030792194363,
        -0.21069555558523223,
        -0.21069534410049062,
        -0.20428002591828495,
        -0.2032399321928695,
        -0.20336835237347756,
        -0.20336897284199876,
        -0.20336900329126886,
        -0.203490771569012,
        -0.2042947868700161,
        -0.20666183179136086,
        -0.20664000399159052,
        -0.20663994617310283,
        -0.20116078051616645,
        -0.2029511339588949,
        -0.2033618580312516,
        -0.20336080971940837,
        -0.20336075590163116,
        -0.20555605660848528,
        -0.20522910995682955,
        -0.20522944317060415,
        -0.2052294259343712,
        -0.20522946719536828,
        -0.20372767438678124,
        -0.20426175628306745,
        -0.20443113721822972,
        -0.20443119405689467,
        -0.204431269210743,
        -0.20902049773643486,
        -0.1999924273379693,
        -0.2099036954413491,
        -0.20708188493648264,
        -0.20578926319063195,
        -0.21289389067995024,
        -0.21088322807659957,
        -0.2113852949158598,
        -0.21163033250001048,
        -0.21192843548499254,
        -0.20976118129888385,
        -0.20943080402515427,
        -0.2114063121277566,
        -0.21127685137453464,
        -0.21129555500388406,
        -0.20601778688776848,
        -0.20400158282778022,
        -0.20527020994778847,
        -0.2052709851107479,
        -0.20527105357394018,
        -0.20627155630743055,
        -0.20345968101642867,
        -0.2028834434733905,
        -0.20265672877862984,
        -0.20265654409362563,
        -0.20139052635287785,
        -0.2006811643423297,
        -0.2019461438319526,
        -0.20223766507644306,
        -0.2022375094655462,
        -0.20387598074564303,
        -0.20081109107410722,
        -0.2008383558518559,
        -0.20083773118844248,
        -0.20083766473794734,
        -0.20205040192612328,
        -0.20234481838756965,
        -0.20160845296758978,
        -0.20179630884264282,
        -0.20179635245500196,
        -0.2034735661593574,
        -0.20411865207508187,
        -0.2033030154151025,
        -0.20330341968264345,
        -0.20330349688648,
        -0.21156174330351804,
        -0.20688350172446557,
        -0.21182671466327907,
        -0.21126818168469882,
        -0.21054612408611703,
        -0.20982600680952262,
        -0.21177806292714005,
        -0.21165735103828748,
        -0.2124668411997908,
        -0.21246737386558903,
        -0.2082202467582863,
        -0.21010004497791354,
        -0.20689227701681362,
        -0.20816204920906792,
        -0.20816219833634128,
        -0.20597802471242663,
        -0.20690565538521563,
        -0.2067835709961555,
        -0.20643058037352982,
        -0.2065065247374828,
        -0.20176522969192115,
        -0.20347466040291207,
        -0.20437284070258566,
        -0.20329738327882038,
        -0.20329726875794205,
        -0.2025107737399372,
        -0.2026701558872169,
        -0.2026093426347603,
        -0.2012649653539185,
        -0.2012647985061337,
        -0.20058338032413336,
        -0.1993496905555892,
        -0.20063795372933235,
        -0.20082862418372074,
        -0.20082858925459765,
        -0.2005948423993033,
        -0.20074141502024956,
        -0.20065097001538423,
        -0.20064907966742357,
        -0.20064905526422744,
        -0.20267581673817306,
        -0.20015532684928367,
        -0.20047802913233073,
        -0.20037545986780497,
        -0.20037553698900726,
        -0.2097074221635265,
        -0.2059520392495323,
        -0.2056712722902069,
        -0.20716154741943307,
        -0.20797506499054524,
        -0.21303244806835178,
        -0.2146745779492065,
        -0.2143029457116713,
        -0.21346939007285282,
        -0.21347316949838027,
        -0.20876285856546153,
        -0.20892449723103831,
        -0.20831174613931275,
        -0.20828435120673952,
        -0.20804500957600508,
        -0.20621904804369823,
        -0.20585826113253988,
        -0.2056614657928246,
        -0.2056491137961258,
        -0.20541152402492807,
        -0.2036166440168552,
        -0.20441997567549927,
        -0.20467534686688763,
        -0.20469655862209687,
        -0.20469014460317383,
        -0.2028242488139152,
        -0.20197745093992106,
        -0.20234043599116044,
        -0.20283427497955311,
        -0.20285296603872247,
        -0.2033859981026933,
        -0.2036071928990898,
        -0.20321332032623293,
        -0.20306628067335245,
        -0.20300033793721872,
        -0.20351415522953265,
        -0.20316506979956672,
        -0.20279019729139272,
        -0.20297356311076029,
        -0.2029744452559659,
        -0.20264968949647508,
        -0.20269894664361524,
        -0.20294953605276672,
        -0.2030372045509669,
        -0.20304724265141152
    ],
    "split2_test_score": [
        -0.1484509629801866,
        -0.14919543956097783,
        -0.14440638587994134,
        -0.14174709919860093,
        -0.14172486080406452,
        -0.15864588008217284,
        -0.15538559185550005,
        -0.15517623361306662,
        -0.15495185795222868,
        -0.15656240591864895,
        -0.13560770546208958,
        -0.16267655896357291,
        -0.16101285210816205,
        -0.16104621779449643,
        -0.16104955502108492,
        -0.1384191174043218,
        -0.1453657688117811,
        -0.14548402306965064,
        -0.14459211703746197,
        -0.1445926341262044,
        -0.1337203086694169,
        -0.1302747841175702,
        -0.1291699708649643,
        -0.12962128792919844,
        -0.1296216162641935,
        -0.13683221584476435,
        -0.13651698896945474,
        -0.13091237261176683,
        -0.13038778634176906,
        -0.13038849080967027,
        -0.14475223943716556,
        -0.14321689540381952,
        -0.14312047778952605,
        -0.14312266493445464,
        -0.1431228868530846,
        -0.14632134451129677,
        -0.13729933930653218,
        -0.14144011337751805,
        -0.14144061176416067,
        -0.1414406577958828,
        -0.14969769422321041,
        -0.1499620476800537,
        -0.14203126007852004,
        -0.14203324860394959,
        -0.14203343859062662,
        -0.15851021293445558,
        -0.16115618156010156,
        -0.1610699004203607,
        -0.16314678618013886,
        -0.16421073573842276,
        -0.1468080641487643,
        -0.14859479480229768,
        -0.1649091124932778,
        -0.16482438257688609,
        -0.16216636863483014,
        -0.14248927841791317,
        -0.15111900461175948,
        -0.15061998441705524,
        -0.1506632640335676,
        -0.1506650122119479,
        -0.1398187416833903,
        -0.13903572700788133,
        -0.14163891767782977,
        -0.14182963230090448,
        -0.14182961982536973,
        -0.1434400476173183,
        -0.14389453707625646,
        -0.1399456585231007,
        -0.13995149294160228,
        -0.13995209183361687,
        -0.14218625608085325,
        -0.1452860565743272,
        -0.14172524795664518,
        -0.14153561944784251,
        -0.14153605610249193,
        -0.14063252600747148,
        -0.14085247298907783,
        -0.14082346827425216,
        -0.14069898281396698,
        -0.14069945431152422,
        -0.14304509596676057,
        -0.14233890408756145,
        -0.1420950262910237,
        -0.14328506121247608,
        -0.14328527081516845,
        -0.142768964634627,
        -0.14274097458561355,
        -0.1427365469228987,
        -0.1427379345612622,
        -0.1426760892319284,
        -0.15219203673684517,
        -0.15305450020633096,
        -0.14544211630180606,
        -0.15267989311882943,
        -0.15268325278281994,
        -0.14998975440000709,
        -0.15458945963702878,
        -0.15412276972169833,
        -0.15448533323682018,
        -0.15448937729858433,
        -0.13518171953756478,
        -0.14847001256328082,
        -0.14677619304169034,
        -0.1501883708939433,
        -0.15153851375484015,
        -0.13030617354507396,
        -0.13412756900932382,
        -0.13311096577299172,
        -0.13166075633982813,
        -0.13165177507265374,
        -0.1412152926607151,
        -0.1380540280379077,
        -0.14080704573801475,
        -0.14057122987734377,
        -0.14051843583392967,
        -0.1422773288185108,
        -0.14276499529306724,
        -0.1424753945166358,
        -0.1425779424240971,
        -0.1425782410968178,
        -0.1436379475363406,
        -0.1421610328234493,
        -0.14249859730980163,
        -0.14250145920155274,
        -0.14250177248505141,
        -0.14241096784716423,
        -0.1453627252298106,
        -0.14540020563376999,
        -0.14546050535396687,
        -0.14546070251123064,
        -0.14502215581906355,
        -0.1473724262183401,
        -0.14551718529143942,
        -0.14541697401875758,
        -0.1454171939026872,
        -0.15019556234243872,
        -0.1493813419207207,
        -0.14929988759614418,
        -0.15012181763453886,
        -0.1519108047964169,
        -0.15073543573348555,
        -0.15469686272430996,
        -0.15171467633787236,
        -0.15260237390472772,
        -0.15101003099837226,
        -0.1364309952712321,
        -0.1391336092645781,
        -0.14569580745088734,
        -0.14317058159533727,
        -0.14326230775036883,
        -0.137890239041628,
        -0.1339817335549957,
        -0.13676351261593647,
        -0.13602712138860817,
        -0.1353362097144944,
        -0.13982335375106814,
        -0.14207303174526362,
        -0.13962969709435358,
        -0.14127240139532204,
        -0.1398323845970227,
        -0.14448964626600225,
        -0.14385203328868293,
        -0.1438512622993686,
        -0.14385915742373728,
        -0.14380415686141937,
        -0.14563927279669955,
        -0.145701089043063,
        -0.14557473373389698,
        -0.14534109068380588,
        -0.1452387066165665,
        -0.14738597797487152,
        -0.1481139694933893,
        -0.14852526097719898,
        -0.14815970528659905,
        -0.1481883860902796,
        -0.14955929805854587,
        -0.14895233277868156,
        -0.1486111525888373,
        -0.14971615677006395,
        -0.1494838163992319
    ],
    "split3_test_score": [
        -0.28744448944579143,
        -0.29341046521216296,
        -0.28286971613055384,
        -0.29506068738806096,
        -0.28737196498766604,
        -0.2885197980574262,
        -0.2734739296964362,
        -0.26904036469724835,
        -0.2924143183125299,
        -0.29241463347973057,
        -0.25731304369072083,
        -0.2584181292335461,
        -0.25745627639734314,
        -0.2574676704006723,
        -0.2574688249210023,
        -0.2856229393279792,
        -0.2839757034119171,
        -0.2836529824108268,
        -0.28354981629362924,
        -0.28355078273150897,
        -0.2695774693030832,
        -0.26870523298500143,
        -0.28121991712471395,
        -0.27904972889374324,
        -0.27905113698333167,
        -0.2598993867847992,
        -0.25974360256405,
        -0.25634037479887584,
        -0.2556512907655721,
        -0.25565323825054087,
        -0.25295331465187465,
        -0.2493977215612767,
        -0.254605977098604,
        -0.25461748240042803,
        -0.2546186895108286,
        -0.2409133904690724,
        -0.24109776810176936,
        -0.24239693508875249,
        -0.24240778313915606,
        -0.24240876922095891,
        -0.2268398555856986,
        -0.2294272393686326,
        -0.2365368075611245,
        -0.24074796906594362,
        -0.24074915811671202,
        -0.2874162780328071,
        -0.28992350448399434,
        -0.28571734546256616,
        -0.28511618743707745,
        -0.2856982915414726,
        -0.27513972565855915,
        -0.2918762822664489,
        -0.28710052727342994,
        -0.2810674560997101,
        -0.2807958495659511,
        -0.26430758941047294,
        -0.26708769010000183,
        -0.27394767406158765,
        -0.2748461912513364,
        -0.2748470594497959,
        -0.2670641959815747,
        -0.27028424742232976,
        -0.261765883888307,
        -0.2615874502970981,
        -0.27803864144195484,
        -0.2623720701858109,
        -0.27491595142245506,
        -0.2688416547163097,
        -0.27009878689949446,
        -0.27009903482173114,
        -0.25251377253586843,
        -0.252841089789754,
        -0.2554554134525665,
        -0.25546754536500327,
        -0.25546876420422515,
        -0.24934093690510867,
        -0.25044999367441734,
        -0.25108699849720145,
        -0.251151248687722,
        -0.25115286337513454,
        -0.2366537834874667,
        -0.23831490319558704,
        -0.23752098127956248,
        -0.23752774707940588,
        -0.23752832075167998,
        -0.24368026072581897,
        -0.23445640536321774,
        -0.23325904069719833,
        -0.23326637595065497,
        -0.23326716345402046,
        -0.2922278622486205,
        -0.29823462888413643,
        -0.298461238244974,
        -0.2873906182140258,
        -0.2906883845458632,
        -0.2866729112964321,
        -0.2841357142189284,
        -0.29525002112655313,
        -0.2967929975409403,
        -0.29679392852292913,
        -0.2705475053585763,
        -0.272444618336536,
        -0.2771219658459291,
        -0.2745008965436349,
        -0.27450284621541204,
        -0.26916176437428585,
        -0.27209984355268324,
        -0.2671375219428305,
        -0.2658553576725433,
        -0.2658565634626464,
        -0.25909622457340203,
        -0.2566037170699481,
        -0.25801152467416033,
        -0.2570759843422594,
        -0.25707706133476776,
        -0.24955159005824523,
        -0.25781090246000593,
        -0.2514148640805249,
        -0.25022291940280494,
        -0.2502245993212083,
        -0.2412800685571402,
        -0.2464545270673564,
        -0.24801984024358614,
        -0.24840931019098142,
        -0.248410110067877,
        -0.2272711266736433,
        -0.22957166850148594,
        -0.22687750383133884,
        -0.22686530759298626,
        -0.22686596159704808,
        -0.23203434106260365,
        -0.2314977620281299,
        -0.2325743362424514,
        -0.23258872790912172,
        -0.23258929625434632,
        -0.29410834221013626,
        -0.29701562004983423,
        -0.29455288889631615,
        -0.29566318714327716,
        -0.29281151604984446,
        -0.28748751657414867,
        -0.28511946066043703,
        -0.28629977604958473,
        -0.28318893988673566,
        -0.2835555630131262,
        -0.27655496508900984,
        -0.27179943680772917,
        -0.271567326200957,
        -0.27291883243787773,
        -0.274177761624521,
        -0.2708149205394926,
        -0.2717177365237886,
        -0.2686006779083968,
        -0.2698138572518678,
        -0.269832464475468,
        -0.2604202751642041,
        -0.26037199119610355,
        -0.26113180173384637,
        -0.26005873331725454,
        -0.26006002848111803,
        -0.2524281907319587,
        -0.25377272221925185,
        -0.25528091082986004,
        -0.255261064899303,
        -0.2550579621857579,
        -0.24181561203288263,
        -0.24249686323764433,
        -0.24362595824148897,
        -0.24262323828729784,
        -0.24117514778592208,
        -0.23247577663237923,
        -0.23140675492698942,
        -0.23032135830035264,
        -0.23047256513037054,
        -0.23049281401396618,
        -0.22149372582354365,
        -0.2242904149009049,
        -0.22493467195664857,
        -0.2254419037721672,
        -0.2255600121112266
    ],
    "split4_test_score": [
        -0.3123495941692459,
        -0.3146863431341101,
        -0.32949103125386564,
        -0.32565285145599876,
        -0.32566065697603486,
        -0.3045531796260315,
        -0.30361057783223483,
        -0.29832493864595994,
        -0.29817075549171823,
        -0.2981725927039788,
        -0.28608563084483823,
        -0.29357529314197883,
        -0.2901360304840177,
        -0.29016133952864603,
        -0.2901639626804261,
        -0.2815958577886562,
        -0.28364330325812204,
        -0.28306568632762863,
        -0.2830719141987772,
        -0.2830726200032343,
        -0.2776070034709915,
        -0.27770666282542494,
        -0.2759709144917698,
        -0.27652523493629855,
        -0.27652567254278226,
        -0.27248643204948947,
        -0.27329009458399633,
        -0.2744270411741351,
        -0.27239253657336365,
        -0.272393141960838,
        -0.2725514387383695,
        -0.2709962051615096,
        -0.27420252868672546,
        -0.274203401089731,
        -0.2742034316907384,
        -0.2649020868770846,
        -0.2648010744185019,
        -0.2648821483424316,
        -0.26489017641232276,
        -0.2648511784738,
        -0.2707442630962973,
        -0.2729462958858312,
        -0.27300245822588604,
        -0.27300780298773014,
        -0.27300821735161585,
        -0.31193261648476345,
        -0.3088338831911521,
        -0.32168725703234907,
        -0.32927650182687046,
        -0.3290136930769933,
        -0.305560958394186,
        -0.30297796128570564,
        -0.3104404824510714,
        -0.3125371910737911,
        -0.312540513753466,
        -0.2908038442215032,
        -0.29720809169461876,
        -0.2949447775448636,
        -0.2935288042730399,
        -0.29353129523603255,
        -0.2837421015991285,
        -0.28256802713534424,
        -0.28253863160846265,
        -0.28286343142855924,
        -0.2828641947967071,
        -0.2818266121799173,
        -0.28096295514646474,
        -0.284305330561653,
        -0.28432420196946073,
        -0.2843244288740859,
        -0.2795452840557403,
        -0.27857663010904765,
        -0.27942248269972203,
        -0.28004714435150074,
        -0.2800470376444954,
        -0.2764876471215419,
        -0.2757944325239759,
        -0.2749201545010869,
        -0.2749501027457741,
        -0.27495045214485286,
        -0.2764133817342713,
        -0.27676715777708866,
        -0.27693082728554713,
        -0.2768873751563954,
        -0.2768874972998532,
        -0.27053230675365847,
        -0.274265612754867,
        -0.26970295406769795,
        -0.2739565184239981,
        -0.2739569126615143,
        -0.3080367679024421,
        -0.31161218741922564,
        -0.3256055026097471,
        -0.32176520898918476,
        -0.32371316987620025,
        -0.2995949636042165,
        -0.3060875699865606,
        -0.31221679278505765,
        -0.310939049768001,
        -0.31094934622678483,
        -0.29485763927573394,
        -0.29587639806985755,
        -0.293971974362796,
        -0.2947959842044177,
        -0.29479778090132175,
        -0.28433044666588975,
        -0.2898782288854543,
        -0.292156708990797,
        -0.28714954250379976,
        -0.2871505823801318,
        -0.2779902701055006,
        -0.2821958671413538,
        -0.28347794830003226,
        -0.28379053971041296,
        -0.28379093821409046,
        -0.2731076870017079,
        -0.27033549934162393,
        -0.2703485965853539,
        -0.27106582691184844,
        -0.2710658179661841,
        -0.2711376481994286,
        -0.27344891064909266,
        -0.27320911070957843,
        -0.2736982205889333,
        -0.27369819021591324,
        -0.2695597446200586,
        -0.2699454647577646,
        -0.26907422464046593,
        -0.26905719760981156,
        -0.2690575612353237,
        -0.26988971081051283,
        -0.2693429405180413,
        -0.2735997179721239,
        -0.2736122076363651,
        -0.2736123487799505,
        -0.3186187176095025,
        -0.3135396981239576,
        -0.3209572926297492,
        -0.32305024804954857,
        -0.3244477066351431,
        -0.30265816089161357,
        -0.3077271759231709,
        -0.30458968634274636,
        -0.307134460803085,
        -0.30586187442975443,
        -0.29580878576579794,
        -0.29606643703600916,
        -0.2977423010287487,
        -0.29680590138419066,
        -0.29687034445482563,
        -0.2875090392602664,
        -0.2891134888172844,
        -0.2882732582995433,
        -0.2890286192866488,
        -0.28899902615684975,
        -0.2790392173531117,
        -0.2799021792998186,
        -0.2797362290800426,
        -0.2792103470074185,
        -0.2794216770700653,
        -0.2708940134578872,
        -0.2715314380142832,
        -0.272562394431513,
        -0.27275349496252443,
        -0.27275299979169026,
        -0.26995670170192526,
        -0.2697518616159306,
        -0.2693285896365596,
        -0.2693954558083876,
        -0.2691561280856027,
        -0.26864755810438606,
        -0.26763269714875904,
        -0.2673191423020182,
        -0.2685116156268143,
        -0.2685910139758673,
        -0.26792389804088695,
        -0.2687393596231204,
        -0.2684635244339567,
        -0.26889423769000514,
        -0.26887508846348657
    ],
    "mean_test_score": [
        -0.2199753192331239,
        -0.21901510235158148,
        -0.21760533679185107,
        -0.21866039041639224,
        -0.21840312350636565,
        -0.22194404696195544,
        -0.2186552539026628,
        -0.21646392410907228,
        -0.22139406696633673,
        -0.22173400694191195,
        -0.20993000592598557,
        -0.2177746388512741,
        -0.21631262168616489,
        -0.21617532183484856,
        -0.21633202044972832,
        -0.21658016025535112,
        -0.21852934016132736,
        -0.2183012870376718,
        -0.21796463586468756,
        -0.21796503972854583,
        -0.2108634068441345,
        -0.21006705109942786,
        -0.21188718217686095,
        -0.21165456451466977,
        -0.21165501102369064,
        -0.2090106153645685,
        -0.20920056967534562,
        -0.2083096278863902,
        -0.2076553888655425,
        -0.20765601832931183,
        -0.20971913018906987,
        -0.20834963046658084,
        -0.21012567644263616,
        -0.21014496579663672,
        -0.21014525116366597,
        -0.207334037091085,
        -0.2056837004089998,
        -0.20656712324417814,
        -0.20658332259187265,
        -0.20657573586532552,
        -0.20648621769032344,
        -0.20784588318106306,
        -0.20746937001776172,
        -0.20831301513809777,
        -0.20830402213785087,
        -0.220350730588008,
        -0.21865692972690193,
        -0.22196327175976305,
        -0.22339458291937503,
        -0.22341823253314175,
        -0.2180871065608881,
        -0.2206858534689669,
        -0.22455784407486362,
        -0.2235711748506998,
        -0.22304508014333607,
        -0.21408275182680256,
        -0.2177023779420911,
        -0.21872001774907696,
        -0.21886420647213342,
        -0.21886872883520048,
        -0.21290296239434667,
        -0.2128600504176001,
        -0.21185410509560065,
        -0.2119216146339542,
        -0.21521201112821187,
        -0.2127566084104234,
        -0.2145553332284405,
        -0.2131447468543129,
        -0.21332728644749827,
        -0.213327441804191,
        -0.20967265735338306,
        -0.20996103806537159,
        -0.21034697338861857,
        -0.21049885800750756,
        -0.21049910554902446,
        -0.20917472307958293,
        -0.2088608348641313,
        -0.20869044894644073,
        -0.20868411783934385,
        -0.20868459977966766,
        -0.20746926191025156,
        -0.20794286823085542,
        -0.20754961311106196,
        -0.2077821800203472,
        -0.20779425703385007,
        -0.20855703681825916,
        -0.20761810327974187,
        -0.20635367184025083,
        -0.20705530414412662,
        -0.2070636412586425,
        -0.22017469264771267,
        -0.22095659470023996,
        -0.22382401919301742,
        -0.22191428470647873,
        -0.22272291893346735,
        -0.21943489438996408,
        -0.22136480190555635,
        -0.22444626837946008,
        -0.22517252349968456,
        -0.2251750397572648,
        -0.21443481701227612,
        -0.2182282385119599,
        -0.21770466203162003,
        -0.21823350645213258,
        -0.2185041196622195,
        -0.2115297303071954,
        -0.21428776355904233,
        -0.2135873369353903,
        -0.21191469203890972,
        -0.21192850014536102,
        -0.20991710180325635,
        -0.2099607513267344,
        -0.21134944602842715,
        -0.21092581693123055,
        -0.21091552345646325,
        -0.2080127739197534,
        -0.20922541796768018,
        -0.2080526603472462,
        -0.2076373110640059,
        -0.20763769589329692,
        -0.20656863306160206,
        -0.20747046268328756,
        -0.20799010321818515,
        -0.2082045687959304,
        -0.2082048068191173,
        -0.20370552731993122,
        -0.20498757183491922,
        -0.20420878499408426,
        -0.2042191474624348,
        -0.20421937082865207,
        -0.20637799844408417,
        -0.20613958296222207,
        -0.20690650394229054,
        -0.20688790575088603,
        -0.20688808599770675,
        -0.22218161519599772,
        -0.22005135967464887,
        -0.22085839618777486,
        -0.22207159060362316,
        -0.2224963614425679,
        -0.22118663882199668,
        -0.2227337942482226,
        -0.22158379579976492,
        -0.22163009927163993,
        -0.22107343296656445,
        -0.2162255571054356,
        -0.21588654322892015,
        -0.21743968268887395,
        -0.21712718159463912,
        -0.21735261773890463,
        -0.21420435124689363,
        -0.21383714500662582,
        -0.21357385494864795,
        -0.21380469907303973,
        -0.21359068401306058,
        -0.21057399969308008,
        -0.2113135149576773,
        -0.21097676816161898,
        -0.2110086057440908,
        -0.2107681554557767,
        -0.20872174911585767,
        -0.2087793604050358,
        -0.2094021583395005,
        -0.20952925121391255,
        -0.20949055763967683,
        -0.20729616687705593,
        -0.20741990845255115,
        -0.20754165180121711,
        -0.20721719965923963,
        -0.20686683506662734,
        -0.20615570876563732,
        -0.20582432653989438,
        -0.20553650034444634,
        -0.20578751381659752,
        -0.2058137297422677,
        -0.20488438671728743,
        -0.2054751968555446,
        -0.20557309617909478,
        -0.20594490459028192,
        -0.20591770035990747
    ],
    "std_test_score": [
        0.07066900948484355,
        0.07317802201959697,
        0.0778680049906791,
        0.07964418507276154,
        0.07704039026946696,
        0.06484158654432769,
        0.0621437410690193,
        0.06041144595797163,
        0.06491880493705929,
        0.06457185587326562,
        0.0559506759501931,
        0.05165923679510137,
        0.051018673187508815,
        0.05106099953728433,
        0.05103916909383625,
        0.059065524273036525,
        0.05730862802059216,
        0.057191472536462964,
        0.057413984678769445,
        0.057414231513272775,
        0.05592484010614826,
        0.05656811500323052,
        0.05934247844702355,
        0.05883531178037765,
        0.058835634452997235,
        0.05138765850569533,
        0.051655073765678364,
        0.05273280495938197,
        0.05225442581262782,
        0.05225473234367891,
        0.047265143746405794,
        0.04686313991621729,
        0.04864154689340096,
        0.048631454845329915,
        0.04863162101586603,
        0.04235910136425055,
        0.04491269674866021,
        0.04403163614780631,
        0.04402763679910179,
        0.04401745697861782,
        0.040997921741315974,
        0.04172035255133389,
        0.04497410722733089,
        0.045547336117165695,
        0.04555311610986972,
        0.06948944752597563,
        0.06948077711782283,
        0.07219097864063953,
        0.07376350238243079,
        0.07366630779537665,
        0.06425842098371011,
        0.06672067771796576,
        0.06439700772121357,
        0.06411917536626077,
        0.06455551295342553,
        0.056845603286984916,
        0.056888891556498254,
        0.05777844960660212,
        0.057318675367524656,
        0.0573188127214265,
        0.05544027539054948,
        0.055966045454565,
        0.053626868060265294,
        0.05362964711731718,
        0.05697620435459287,
        0.05276026115717809,
        0.05512803186182594,
        0.05570041898328783,
        0.055987591662962535,
        0.05598756708243752,
        0.050409327859539645,
        0.049447099813490554,
        0.050924810697409326,
        0.05113522516204476,
        0.051135320435808644,
        0.04899386149647895,
        0.04889509962796769,
        0.048855514175667414,
        0.04890950259185846,
        0.04890974326895839,
        0.04601074048907063,
        0.04642874763450084,
        0.046504237988133884,
        0.04617524497576776,
        0.04616799835594688,
        0.044980751473454955,
        0.044752533959174244,
        0.04324307099098424,
        0.044588668691268665,
        0.044595262813841595,
        0.07007052199302603,
        0.07264699684214555,
        0.0769683539634515,
        0.07275334652900076,
        0.07402143327880083,
        0.06408191030522788,
        0.06438740740323529,
        0.06858612063168674,
        0.0679979904129586,
        0.06800062474266684,
        0.06090002143443127,
        0.05799063298422754,
        0.058999667422189025,
        0.05788428003748447,
        0.057569545287063,
        0.05857552308880486,
        0.05939607597106723,
        0.05928588308930567,
        0.05818498345698337,
        0.058186555411726286,
        0.051905648310743506,
        0.05337636426676719,
        0.053118954454928695,
        0.05316141647964288,
        0.05317569730355804,
        0.04809810520319811,
        0.04878599034609645,
        0.047520168773373096,
        0.047552038795466434,
        0.047552242400448155,
        0.04536990084306318,
        0.04732540129197338,
        0.04743243623004395,
        0.04762596791815794,
        0.04762598976936614,
        0.04309186377060307,
        0.04255833026138589,
        0.04201409163621473,
        0.04198795999129564,
        0.04198809688892073,
        0.042547678376198904,
        0.041698953652466585,
        0.04363294032452325,
        0.04366039644708969,
        0.04366045406808719,
        0.07328161762577352,
        0.07375395609964046,
        0.07533823484576313,
        0.0757688754880638,
        0.0750043873715087,
        0.06457143773944501,
        0.06463911074707664,
        0.06479696573442253,
        0.06452037490158974,
        0.06466043930281053,
        0.06191700956857822,
        0.06039533873800867,
        0.05912245383528875,
        0.05963792244905249,
        0.059885456387246225,
        0.05752694614059325,
        0.05918003351574388,
        0.05761198007992515,
        0.05824707970694372,
        0.05845468014840233,
        0.052677963950471314,
        0.052299604854374945,
        0.053059186292887466,
        0.052264922742042634,
        0.0527014563680169,
        0.04735860088714699,
        0.04800253430314539,
        0.04851338721005306,
        0.048548919792984105,
        0.0485179620617302,
        0.04457392344207311,
        0.04462192626906189,
        0.044666272935764965,
        0.044635114401862436,
        0.04435625714037729,
        0.0419753045271595,
        0.04133385229193046,
        0.041007271176187084,
        0.04147237073986955,
        0.04149057828394203,
        0.039506040583532465,
        0.04019415129687048,
        0.040237775546253934,
        0.040140326424973574,
        0.040212310620269635
    ],
    "rank_test_score": [
        150,
        148,
        129,
        144,
        139,
        165,
        142,
        124,
        160,
        163,
        75,
        132,
        122,
        120,
        123,
        125,
        141,
        138,
        133,
        134,
        87,
        78,
        98,
        95,
        96,
        65,
        67,
        55,
        43,
        44,
        73,
        57,
        79,
        80,
        81,
        33,
        10,
        21,
        24,
        23,
        20,
        47,
        36,
        56,
        54,
        153,
        143,
        166,
        173,
        174,
        135,
        154,
        178,
        175,
        172,
        113,
        130,
        145,
        146,
        147,
        104,
        103,
        97,
        100,
        118,
        102,
        117,
        105,
        106,
        107,
        72,
        77,
        82,
        83,
        84,
        66,
        64,
        61,
        59,
        60,
        35,
        48,
        39,
        45,
        46,
        58,
        40,
        18,
        29,
        30,
        152,
        156,
        176,
        164,
        170,
        149,
        159,
        177,
        179,
        180,
        116,
        136,
        131,
        137,
        140,
        94,
        115,
        109,
        99,
        101,
        74,
        76,
        93,
        89,
        88,
        50,
        68,
        51,
        41,
        42,
        22,
        37,
        49,
        52,
        53,
        1,
        6,
        2,
        3,
        4,
        19,
        16,
        28,
        26,
        27,
        168,
        151,
        155,
        167,
        169,
        158,
        171,
        161,
        162,
        157,
        121,
        119,
        128,
        126,
        127,
        114,
        112,
        108,
        111,
        110,
        85,
        92,
        90,
        91,
        86,
        62,
        63,
        69,
        71,
        70,
        32,
        34,
        38,
        31,
        25,
        17,
        13,
        8,
        11,
        12,
        5,
        7,
        9,
        15,
        14
    ]
}