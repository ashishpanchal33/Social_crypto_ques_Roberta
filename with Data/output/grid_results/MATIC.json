{
    "mean_fit_time": [
        9.277001523971558,
        9.886799240112305,
        10.11880087852478,
        9.762399053573608,
        9.326201057434082,
        8.90479850769043,
        9.160999536514282,
        9.147201013565063,
        8.875200271606445,
        9.047399950027465,
        8.690399980545044,
        8.758201360702515,
        8.337997341156006,
        8.699599885940552,
        8.413600873947143,
        8.86319932937622,
        8.478000402450562,
        8.713399410247803,
        8.34099988937378,
        8.838000726699828,
        8.519800472259522,
        8.537001466751098,
        8.405001544952393,
        8.724401044845582,
        8.153200101852416,
        8.754400062561036,
        8.405001163482666,
        8.715399074554444,
        11.753001689910889,
        11.535400295257569,
        12.373800945281982,
        12.074399757385255,
        10.58040156364441,
        10.035000610351563,
        10.485201406478883,
        10.39539942741394,
        9.993800592422485,
        10.047599983215331,
        9.680200290679931,
        10.117798948287964,
        9.272199773788453,
        9.78580060005188,
        9.389200925827026,
        9.598999881744385,
        9.419400262832642,
        9.470601892471313,
        9.162800884246826,
        9.600800228118896,
        9.386598491668702,
        9.23440055847168,
        9.304802131652831,
        9.029399538040161,
        9.151399183273316,
        9.34140043258667,
        9.06360068321228,
        8.953799962997437,
        32.62840023040771,
        31.548799419403075,
        32.28739986419678,
        33.77100048065186,
        24.044398641586305,
        23.217802381515504,
        24.179400587081908,
        23.335199308395385,
        19.574799299240112,
        18.558400630950928,
        20.12319960594177,
        18.795199346542358,
        18.207399606704712,
        17.84600067138672,
        17.476801061630248,
        18.03080086708069,
        17.00380082130432,
        17.444800043106078,
        16.924998903274535,
        17.676600790023805,
        16.49100022315979,
        17.386599922180174,
        16.78480110168457,
        17.06280074119568,
        16.600800657272337,
        16.744999837875366,
        16.245402669906618,
        10.472401142120361
    ],
    "std_fit_time": [
        0.36953633367360794,
        0.8901071029036979,
        0.15742061085180611,
        0.7979680914264851,
        0.6585204678457675,
        0.33631263684606444,
        0.7715855322864261,
        0.2882297171722598,
        0.8324330810275545,
        0.7718020105743687,
        0.27645728514904006,
        0.7280673988302034,
        0.3019266600862696,
        0.7050827408400119,
        0.27901384167494975,
        0.7027544383829312,
        0.19843330205262927,
        0.720207040784189,
        0.38296471242105895,
        0.7389025924606473,
        0.30547483511995205,
        0.7900738634240572,
        0.21424056942969957,
        0.8022638945486501,
        0.18340585600590503,
        0.6944155946635546,
        0.33615560874674516,
        0.765536677436441,
        1.5510098633793725,
        0.5140744621135941,
        0.5726441768838676,
        1.1353000032803897,
        0.4910694686119625,
        0.23513810150249123,
        0.41143423884921115,
        0.2605643125228413,
        0.6154593603165316,
        0.6636394917557826,
        0.2554632160937281,
        0.7467465039044312,
        0.14190586232665198,
        0.932722094882894,
        0.44243957726576405,
        0.6882108843105107,
        0.34016932177062376,
        0.7569538768319013,
        0.3701531858986061,
        0.9169270571811842,
        0.7113054270777138,
        0.38085378180166995,
        0.9927825547587157,
        0.38259097035703543,
        0.3145002013018087,
        0.9061995142144181,
        0.4058810825906258,
        0.8322634158470694,
        4.203559605410632,
        2.617843686963547,
        2.442511062954403,
        2.221256851078651,
        2.697633062722759,
        1.4241976195357338,
        1.8888597618162049,
        0.7190195983393866,
        2.5144469180832103,
        1.0187979907088116,
        2.8677596156553955,
        0.9995788602242535,
        0.934547606408498,
        1.8279630823593631,
        0.923768082497713,
        1.897644768587508,
        0.9121259110884171,
        2.244438524291285,
        0.9750696428125245,
        1.829452974372429,
        0.9756055253325244,
        2.238465828805619,
        0.9772056106095877,
        1.8387718581469639,
        1.0184739506286167,
        2.0058037495187935,
        0.5004937755980217,
        1.5286958408189981
    ],
    "mean_score_time": [
        0.09320001602172852,
        0.09400172233581543,
        0.10299930572509766,
        0.09060068130493164,
        0.09720001220703126,
        0.08860464096069336,
        0.0922004222869873,
        0.08700017929077149,
        0.08499908447265625,
        0.0886007308959961,
        0.08620057106018067,
        0.09839863777160644,
        0.09400177001953125,
        0.09259982109069824,
        0.09479937553405762,
        0.09159932136535645,
        0.1025998592376709,
        0.11019959449768066,
        0.09580030441284179,
        0.10040016174316406,
        0.09679989814758301,
        0.09259881973266601,
        0.08139901161193848,
        0.09679937362670898,
        0.09559946060180664,
        0.09520058631896973,
        0.10059928894042969,
        0.08580045700073242,
        0.09699902534484864,
        0.10520014762878419,
        0.09879961013793945,
        0.09500126838684082,
        0.08699827194213867,
        0.10839886665344238,
        0.09339895248413085,
        0.09080033302307129,
        0.10180187225341797,
        0.09620103836059571,
        0.09159846305847168,
        0.09040279388427734,
        0.08919968605041503,
        0.0955991268157959,
        0.09639925956726074,
        0.09120159149169922,
        0.09759993553161621,
        0.10019860267639161,
        0.09260025024414062,
        0.0966001033782959,
        0.0973994255065918,
        0.08620052337646485,
        0.10499682426452636,
        0.09460043907165527,
        0.10540027618408203,
        0.0941999912261963,
        0.10459990501403808,
        0.10200018882751465,
        0.07980055809020996,
        0.096600341796875,
        0.08220047950744629,
        0.08680024147033691,
        0.09679980278015136,
        0.07499799728393555,
        0.09019951820373535,
        0.0829996109008789,
        0.10199990272521972,
        0.07639918327331544,
        0.08879995346069336,
        0.0940004825592041,
        0.1101996898651123,
        0.09659967422485352,
        0.10079946517944335,
        0.09499907493591309,
        0.08739938735961914,
        0.09479966163635253,
        0.08660001754760742,
        0.09959950447082519,
        0.09640049934387207,
        0.08799924850463867,
        0.0930016040802002,
        0.0970010757446289,
        0.09160127639770507,
        0.08719987869262695,
        0.07759647369384766,
        0.0490018367767334
    ],
    "std_score_time": [
        0.010145934573918703,
        0.007376148676685227,
        0.009424498763412555,
        0.00854550611678481,
        0.008376240685462341,
        0.01138206173829793,
        0.006911010305049032,
        0.02158764213054303,
        0.004690970664845544,
        0.003261562723860685,
        0.007193711578474294,
        0.00598618300408643,
        0.006324707895267078,
        0.007913269883593673,
        0.0106849998060706,
        0.005643603752675252,
        0.02343308956551238,
        0.01923879801421877,
        0.008060106045866159,
        0.0051623940255183425,
        0.005843742915978944,
        0.006467771523999265,
        0.013558101201924955,
        0.007857520936040904,
        0.004585925766766718,
        0.016570094679001925,
        0.011534251129391592,
        0.01585426459639764,
        0.014656130149940369,
        0.005455894755154235,
        0.013906353163455027,
        0.005727238064505141,
        0.01879601918135933,
        0.013719900176993522,
        0.00935257840536952,
        0.008886056604873672,
        0.014046790045058034,
        0.005036173082078432,
        0.01286253491848382,
        0.013612312257265065,
        0.009703725984987189,
        0.008332650448121426,
        0.008189040397118643,
        0.007782732506381842,
        0.0039298419223790905,
        0.017373403159121205,
        0.016107014252872028,
        0.008475203464143842,
        0.007684536383077559,
        0.007598756557072403,
        0.020564446490339172,
        0.003073154445897306,
        0.017176098674277326,
        0.017313938649476734,
        0.00898021278260081,
        0.0274001291693676,
        0.016290855598788026,
        0.018735188655982938,
        0.014810084373477533,
        0.014062841619199445,
        0.010589963556897447,
        0.01253792376425909,
        0.01541932051741196,
        0.021927580936293854,
        0.009317312463007878,
        0.024004054981405804,
        0.009325779849927806,
        0.016553324257065197,
        0.010068924779485478,
        0.023795684384580542,
        0.022718986687932197,
        0.017911064825674342,
        0.009309527796386117,
        0.006585088267441044,
        0.015666858901569658,
        0.006470270401450791,
        0.00801445401602092,
        0.01864344737298865,
        0.011865982142717845,
        0.0028965205004420364,
        0.018382299887268132,
        0.017914491904203102,
        0.01968491948040768,
        0.004559034565077524
    ],
    "param_eval_metric": [
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse",
        "rmse"
    ],
    "param_learning_rate": [
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.45,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.2,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03,
        0.03
    ],
    "param_max_depth": [
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6
    ],
    "param_min_child_weight": [
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "param_n_estimators": [
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000,
        1000
    ],
    "param_objective": [
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror",
        "reg:squarederror"
    ],
    "param_predictor": [
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor",
        "gpu_predictor"
    ],
    "param_random_state": [
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123,
        123
    ],
    "param_reg_alpha": [
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.13,
        0.13,
        0.13,
        0.13,
        0.21,
        0.21,
        0.21,
        0.21,
        0.29,
        0.29,
        0.29,
        0.29,
        0.37,
        0.37,
        0.37,
        0.37,
        0.45,
        0.45,
        0.45,
        0.45,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.13,
        0.13,
        0.13,
        0.13,
        0.21,
        0.21,
        0.21,
        0.21,
        0.29,
        0.29,
        0.29,
        0.29,
        0.37,
        0.37,
        0.37,
        0.37,
        0.45,
        0.45,
        0.45,
        0.45,
        0.005,
        0.005,
        0.005,
        0.005,
        0.05,
        0.05,
        0.05,
        0.05,
        0.13,
        0.13,
        0.13,
        0.13,
        0.21,
        0.21,
        0.21,
        0.21,
        0.29,
        0.29,
        0.29,
        0.29,
        0.37,
        0.37,
        0.37,
        0.37,
        0.45,
        0.45,
        0.45,
        0.45
    ],
    "param_reg_lambda": [
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001,
        0.1,
        0.01,
        0.001,
        0.0001
    ],
    "param_tree_method": [
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist",
        "gpu_hist"
    ],
    "params": [
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.45,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.2,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.005,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.05,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.13,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.21,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.29,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.37,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.1,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.01,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.001,
            "tree_method": "gpu_hist"
        },
        {
            "eval_metric": "rmse",
            "learning_rate": 0.03,
            "max_depth": 6,
            "min_child_weight": 2,
            "n_estimators": 1000,
            "objective": "reg:squarederror",
            "predictor": "gpu_predictor",
            "random_state": 123,
            "reg_alpha": 0.45,
            "reg_lambda": 0.0001,
            "tree_method": "gpu_hist"
        }
    ],
    "split0_test_score": [
        -0.28561726235671064,
        -0.2871088629225585,
        -0.2840952791378072,
        -0.2836030066032589,
        -0.2929876107004257,
        -0.2921984227108525,
        -0.292201704019382,
        -0.29220274725400264,
        -0.29096689667434644,
        -0.2916863235704015,
        -0.29168032370707414,
        -0.29168100029001826,
        -0.2870456740856209,
        -0.2870547951538355,
        -0.288089206594042,
        -0.2880889994723681,
        -0.2827556333969821,
        -0.2849291658620601,
        -0.28493196190463865,
        -0.28493223420498653,
        -0.2780937820530404,
        -0.28467058642118476,
        -0.2846737688298461,
        -0.2846741021273987,
        -0.2906752503135967,
        -0.29069224843761127,
        -0.2906939690779919,
        -0.2906941332041897,
        -0.28618721774128913,
        -0.2942010768081871,
        -0.294285598106368,
        -0.293814780401328,
        -0.2869611030921822,
        -0.2906801010645726,
        -0.2908779498790027,
        -0.2908790054846144,
        -0.29238360843845096,
        -0.292273096787114,
        -0.2924968195292119,
        -0.2924971649098586,
        -0.29294780889485117,
        -0.2904477169151978,
        -0.2899171831972756,
        -0.28991707234366093,
        -0.2900033105556297,
        -0.2888176177360957,
        -0.2888768802857702,
        -0.28887712549970185,
        -0.2884250987431443,
        -0.28915999944779447,
        -0.289163439072944,
        -0.289163815658306,
        -0.2903039222887642,
        -0.29004150606394014,
        -0.2901553434888211,
        -0.29015557129730885,
        -0.2851985357282285,
        -0.28937647419947204,
        -0.29103902711872764,
        -0.29335047434317885,
        -0.2886644799138928,
        -0.2939042091083033,
        -0.2942556591814922,
        -0.2930723262790891,
        -0.29117063212219074,
        -0.29046740921757014,
        -0.29113651944632835,
        -0.2908225343191696,
        -0.2895698694217452,
        -0.2891322381698335,
        -0.289526721044826,
        -0.2897464320222685,
        -0.2914352297640484,
        -0.29109676157233383,
        -0.29055719196322066,
        -0.29052778085673403,
        -0.2920245245496822,
        -0.29146250078468505,
        -0.29150698026262395,
        -0.29159764744846134,
        -0.2919121802615751,
        -0.2921713952717136,
        -0.29221208828434303,
        -0.29221212161724525
    ],
    "split1_test_score": [
        -0.2779610280904128,
        -0.27228172979742415,
        -0.2769932803592051,
        -0.2711720627984969,
        -0.2694295198940873,
        -0.27091945213802504,
        -0.27554724366099237,
        -0.27579947117256004,
        -0.26485176272451755,
        -0.2636059036139423,
        -0.2636367125316051,
        -0.2636398051413801,
        -0.252489730106999,
        -0.26578212718895816,
        -0.2712496499094965,
        -0.271251481948738,
        -0.26814998712002847,
        -0.27630864824107526,
        -0.27633020899272615,
        -0.2763324117706637,
        -0.2683782608811566,
        -0.268524513757548,
        -0.26853737000355865,
        -0.2685386681166566,
        -0.258966458805314,
        -0.26063296753528975,
        -0.2606458495307997,
        -0.26064716184126,
        -0.2747781382548826,
        -0.26144054127299793,
        -0.26446683810135957,
        -0.2696569476343082,
        -0.2751191461799141,
        -0.2729128438016028,
        -0.26956424849218913,
        -0.2691030396483399,
        -0.25490326501892585,
        -0.2718986858419672,
        -0.27246946772475167,
        -0.2724724008564191,
        -0.26105865330485334,
        -0.26427101440121215,
        -0.2645291908647571,
        -0.26453046824188653,
        -0.2610024564371432,
        -0.272680678694444,
        -0.2726908822301846,
        -0.2726920032110293,
        -0.26021990250138927,
        -0.2497535279290621,
        -0.2509666526314179,
        -0.25096778940790865,
        -0.2546975442265031,
        -0.2553449656359181,
        -0.25535410580672735,
        -0.255354970989376,
        -0.27152656064377334,
        -0.2772241198847321,
        -0.27448691981064577,
        -0.27532879333827953,
        -0.2748674842407118,
        -0.27065369631246716,
        -0.2743829779108359,
        -0.27499369208384267,
        -0.2635764731184922,
        -0.2635129226477508,
        -0.26464754967259585,
        -0.2657128664268387,
        -0.2622508738912755,
        -0.2634836218540994,
        -0.26572999166657213,
        -0.2658075076379746,
        -0.2652361110013519,
        -0.2674903781724282,
        -0.26627086827632224,
        -0.265955208992347,
        -0.26050040022878806,
        -0.26020151199439445,
        -0.25979183190186905,
        -0.26000318042958104,
        -0.25099939385276415,
        -0.25139478405788374,
        -0.2517396507302068,
        -0.2513774963406079
    ],
    "split2_test_score": [
        -0.11050858207524103,
        -0.10674114065917623,
        -0.1064711247792783,
        -0.10572566382067744,
        -0.11129739629701653,
        -0.11222522656823435,
        -0.11161997244346088,
        -0.1108423900189073,
        -0.12265264114649924,
        -0.12001719311280636,
        -0.12096643135211609,
        -0.12096652893126768,
        -0.11781598803054995,
        -0.11810231838599343,
        -0.12081557747305516,
        -0.12081566155308282,
        -0.11923518186447027,
        -0.11905812492989419,
        -0.11905976224112062,
        -0.11905991466987359,
        -0.11667897971975447,
        -0.11570791351875503,
        -0.1157102039727197,
        -0.11571044190052647,
        -0.11723616272562122,
        -0.11751317945425785,
        -0.11751101853485629,
        -0.11756506138174334,
        -0.11194107429294947,
        -0.11107941141159777,
        -0.1101152452611109,
        -0.11035378671951457,
        -0.11150539720688167,
        -0.11208392146140775,
        -0.11175615134109766,
        -0.11175600007955357,
        -0.11627821593546728,
        -0.11522765494948656,
        -0.11534651011021223,
        -0.11505448011614702,
        -0.11464897321367565,
        -0.11470189181115022,
        -0.11422849788974555,
        -0.11422854622583384,
        -0.11533966236869873,
        -0.11787450478019189,
        -0.118062172964652,
        -0.11806242795491072,
        -0.1140986035447545,
        -0.11433519810693012,
        -0.11444460270585863,
        -0.11444473769107864,
        -0.11600051593640387,
        -0.11624437367216182,
        -0.11624602948647557,
        -0.11624618901540347,
        -0.11163652259534247,
        -0.11186029958638471,
        -0.11205971369949333,
        -0.11082484041182022,
        -0.11098173459106898,
        -0.11060584986585709,
        -0.11081252577059111,
        -0.11094805467488468,
        -0.11225082972964193,
        -0.11223666859106496,
        -0.1123536680319236,
        -0.11226990535696617,
        -0.11299011908640294,
        -0.1122711805957109,
        -0.11230234010870621,
        -0.11266666616361735,
        -0.11369910580091927,
        -0.11373074704624209,
        -0.11378712307507764,
        -0.11381436250541847,
        -0.11415616852675936,
        -0.11403554722112362,
        -0.11440802155261195,
        -0.11459528760076054,
        -0.11512985024042587,
        -0.1156997063002597,
        -0.1156136346055382,
        -0.11578368849748913
    ],
    "split3_test_score": [
        -0.12131388191626145,
        -0.12218849907832291,
        -0.12353075647662655,
        -0.12376099775543224,
        -0.12808626461389702,
        -0.12959038160206665,
        -0.13190700720481044,
        -0.13178811171657118,
        -0.13328830069142122,
        -0.13721060006490488,
        -0.13720604536265982,
        -0.1372056065614925,
        -0.1257399049293902,
        -0.12647812553310603,
        -0.12647377596904788,
        -0.1264733069798733,
        -0.14853782646449504,
        -0.14921033118037505,
        -0.14921310832922138,
        -0.14921339874373238,
        -0.13777737701231252,
        -0.13864025306631378,
        -0.13864270119247102,
        -0.13864243084444844,
        -0.161337015454987,
        -0.1648665985899375,
        -0.16486279115439906,
        -0.16486244093294947,
        -0.11577464341325713,
        -0.12576632035121654,
        -0.12696823770120783,
        -0.12687458201924764,
        -0.12457643547702833,
        -0.12058012599852383,
        -0.11808646401854775,
        -0.12236248787591136,
        -0.12580001292244916,
        -0.1170285784679101,
        -0.11699853264355915,
        -0.11699741754551153,
        -0.12396752734109377,
        -0.12700422681434403,
        -0.12699799050902652,
        -0.12699737729663188,
        -0.1341877803923747,
        -0.13945880753417664,
        -0.13945120809504188,
        -0.13945042764104476,
        -0.1315380997703404,
        -0.1320198357394674,
        -0.13124167435728656,
        -0.13124084617943613,
        -0.14032548565551306,
        -0.14924715393302176,
        -0.14951436921745662,
        -0.14951377352433087,
        -0.12290502194281992,
        -0.12745431061365414,
        -0.12768398663077798,
        -0.12751489045412126,
        -0.12423746195704477,
        -0.12025302156260542,
        -0.12551421124805376,
        -0.12539656378172997,
        -0.12444285804608415,
        -0.12172144711513289,
        -0.12164777905665411,
        -0.12291921629954872,
        -0.12774026795507917,
        -0.12933781450472737,
        -0.12884741171519196,
        -0.13042450617396043,
        -0.13411391932619302,
        -0.13613334419656978,
        -0.13479977282885974,
        -0.13485091653073297,
        -0.1377233227788237,
        -0.13550454987014518,
        -0.1354771559681216,
        -0.1355463968828978,
        -0.14226140261906378,
        -0.14174601778051144,
        -0.14154459660584467,
        -0.14156602266802076
    ],
    "split4_test_score": [
        -0.13371310320101826,
        -0.10595742982882883,
        -0.1106546897063241,
        -0.10833102076377317,
        -0.09798435533652751,
        -0.10350836202338096,
        -0.09908020344163276,
        -0.0989398306102742,
        -0.09563073813721076,
        -0.08290561986412981,
        -0.08291786873129954,
        -0.08291908847690574,
        -0.09096576488832496,
        -0.09165234024343902,
        -0.09115963066916088,
        -0.091159833239068,
        -0.08835125139776584,
        -0.09858529345328873,
        -0.09858711328613222,
        -0.09858731324178066,
        -0.08526466166054383,
        -0.08855893137566123,
        -0.0895106906484722,
        -0.08951059848188808,
        -0.08738042342630045,
        -0.08803562680533765,
        -0.08804776439544958,
        -0.08804898017710963,
        -0.11068570561865583,
        -0.11254583305043549,
        -0.11521445650555458,
        -0.1152868163683327,
        -0.08964612321832024,
        -0.089006452573615,
        -0.08834513731056647,
        -0.08834662299115269,
        -0.08536562289967825,
        -0.08945549503101918,
        -0.0896047959666962,
        -0.08960514388162127,
        -0.0894189376103317,
        -0.0867895238476851,
        -0.08679275730082599,
        -0.08679310328569692,
        -0.08988851558629916,
        -0.08243613723756019,
        -0.08261730625317325,
        -0.08261757624544765,
        -0.08101166535906915,
        -0.08083178122243546,
        -0.08325231616311177,
        -0.08325243974449427,
        -0.08277281709367405,
        -0.0843330429017537,
        -0.08433171691720666,
        -0.08434935483180256,
        -0.10736991101755018,
        -0.10596334811962158,
        -0.10678155142510484,
        -0.1078228472941054,
        -0.08603346491500385,
        -0.08841570361858525,
        -0.08935501188939102,
        -0.08942919971104643,
        -0.0884569638355916,
        -0.0881599417581362,
        -0.0879819092578702,
        -0.08776939627029964,
        -0.08473261608825132,
        -0.08476669166074235,
        -0.08497846166480372,
        -0.08491355104153188,
        -0.08304896222571262,
        -0.08271713378062966,
        -0.08312986546082482,
        -0.0833115286371052,
        -0.0822236569887417,
        -0.08341315528827198,
        -0.08346685894945793,
        -0.08347402225708642,
        -0.08032481004135654,
        -0.08079091284172485,
        -0.08204626867658177,
        -0.08204638385037132
    ],
    "mean_test_score": [
        -0.18582277152792884,
        -0.17885553245726213,
        -0.18034902609184827,
        -0.17851855034832775,
        -0.1799570293683908,
        -0.1816883690085119,
        -0.18207122615405566,
        -0.18191451015446308,
        -0.18147806787479906,
        -0.17908512804523696,
        -0.17928147633695093,
        -0.17928240588021285,
        -0.17481141240817702,
        -0.1778139413010664,
        -0.17955756812296048,
        -0.17955785663862606,
        -0.18140597604874836,
        -0.18561831273333868,
        -0.1856244309507678,
        -0.1856250545262074,
        -0.17723861226536158,
        -0.17922043962789255,
        -0.1794149469294135,
        -0.17941524829418362,
        -0.18311906214516388,
        -0.1843481241644868,
        -0.18435227853869932,
        -0.18436355550745043,
        -0.17987335586420686,
        -0.18100663657888696,
        -0.1822100751351202,
        -0.18319738262854623,
        -0.17756164103486533,
        -0.17705268897994442,
        -0.17572599020828072,
        -0.17648943121591437,
        -0.17494614504299427,
        -0.1771767022154994,
        -0.17738322519488625,
        -0.1773253214619115,
        -0.1764083800729611,
        -0.17664287475791787,
        -0.17649312395232614,
        -0.176493313478742,
        -0.17808434506802912,
        -0.18025354919649367,
        -0.18033968996576438,
        -0.18033991211042685,
        -0.17505867398373953,
        -0.17322006848913793,
        -0.17381373698612376,
        -0.1738139257362447,
        -0.17682005704017167,
        -0.1790422084413591,
        -0.17912031298333747,
        -0.17912397193164437,
        -0.1797273103855429,
        -0.18237571048077292,
        -0.1824102397369499,
        -0.18296836916830106,
        -0.17695692512354444,
        -0.17676649609356362,
        -0.17886407720007277,
        -0.1787679673061186,
        -0.1759795513704001,
        -0.175219677865931,
        -0.17555348509307442,
        -0.17589878373456458,
        -0.17545674928855082,
        -0.17579830935702273,
        -0.17627698524002,
        -0.17671173260787054,
        -0.17750666562364503,
        -0.1782336729536407,
        -0.177708964320861,
        -0.17769195950446753,
        -0.177325614614559,
        -0.17692345303172405,
        -0.17693016972693693,
        -0.17704330692375744,
        -0.1761255274030371,
        -0.17636056325041868,
        -0.1766312477805029,
        -0.17659714259474688
    ],
    "std_test_score": [
        0.07873682775821769,
        0.08267165106549501,
        0.0820328684035931,
        0.08105664626657336,
        0.08355295280811387,
        0.08225095757185544,
        0.08394501279628061,
        0.08417431992510761,
        0.08011419991339802,
        0.08284417367702925,
        0.08271183470050672,
        0.08271239607412037,
        0.07914168862116829,
        0.08160469504558705,
        0.0827879945554977,
        0.08278835102138311,
        0.0792476891622786,
        0.07926907173652607,
        0.07927377634007494,
        0.07927425246930592,
        0.08020232739057516,
        0.08123429412211038,
        0.08102551632358183,
        0.08102589873546504,
        0.07912276806472984,
        0.07905818985559052,
        0.07905873477769912,
        0.07904961740171519,
        0.08224345045252865,
        0.0798884037886062,
        0.080081003885014,
        0.08099599670875512,
        0.08530616242473467,
        0.08632796641572145,
        0.08615736909976689,
        0.08550035428232336,
        0.08254288218768444,
        0.08645221299994828,
        0.08659382295498885,
        0.08663655518091261,
        0.08352070126523323,
        0.08367142685966737,
        0.08365186664230323,
        0.08365209661701964,
        0.08129400465491841,
        0.08420514646627264,
        0.08415353319642403,
        0.08415381788223657,
        0.08313770685363407,
        0.08124028651743141,
        0.08098959405656075,
        0.08098995755230895,
        0.08101758370180497,
        0.07993008718906881,
        0.07994364833217656,
        0.07993971322895937,
        0.08081089383532161,
        0.08279253186299618,
        0.08239197321339874,
        0.08323615031509148,
        0.08656119056774743,
        0.08707803008687517,
        0.08709554777027002,
        0.08689572975480168,
        0.08404735550160393,
        0.08424494579230768,
        0.08469476145277727,
        0.08473050874662126,
        0.08362396196867411,
        0.0836831196106305,
        0.08426753003387018,
        0.08412619616456882,
        0.08432409639759159,
        0.08457104774888706,
        0.08420254124213002,
        0.08407816825140697,
        0.08327903419735773,
        0.0830289330115296,
        0.08289350082416799,
        0.08292405831661784,
        0.08131134469954086,
        0.08130651574001176,
        0.0811181155667958,
        0.08102373260030163
    ],
    "rank_test_score": [
        84,
        46,
        65,
        44,
        61,
        69,
        71,
        70,
        68,
        49,
        53,
        54,
        4,
        41,
        57,
        58,
        67,
        81,
        82,
        83,
        33,
        52,
        55,
        56,
        76,
        78,
        79,
        80,
        60,
        66,
        72,
        77,
        38,
        31,
        10,
        18,
        5,
        32,
        36,
        34,
        17,
        23,
        19,
        20,
        42,
        62,
        63,
        64,
        6,
        1,
        2,
        3,
        26,
        48,
        50,
        51,
        59,
        73,
        74,
        75,
        29,
        25,
        47,
        45,
        13,
        7,
        9,
        12,
        8,
        11,
        15,
        24,
        37,
        43,
        40,
        39,
        35,
        27,
        28,
        30,
        14,
        16,
        22,
        21
    ]
}